{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport RecommendationCard from '@/components/RecommendationCard.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  components: {\n    RecommendationCard\n  },\n  setup() {\n    const router = useRouter();\n    const topic = ref('');\n    const subreddit = ref('');\n    const subreddits = ref([]);\n    const isLoading = ref(false);\n    const showResults = ref(false);\n    const recommendations = ref([]);\n    const viewMode = ref('grid');\n    const genres = ref([]);\n    const selectedRecommendation = ref(null);\n    const modal = ref(null);\n    const activeFilters = reactive({\n      type: 'all',\n      genres: []\n    });\n\n    // Computed property for filtered recommendations\n    const filteredRecommendations = computed(() => {\n      return recommendations.value.filter(rec => {\n        // Filter by type\n        if (activeFilters.type !== 'all' && rec.jikanInfo) {\n          const type = rec.jikanInfo.type ? rec.jikanInfo.type.toLowerCase() : '';\n          if (type !== activeFilters.type) {\n            return false;\n          }\n        }\n\n        // Filter by genre\n        if (activeFilters.genres.length > 0 && rec.jikanInfo) {\n          const recGenres = [...(rec.jikanInfo.genres || []), ...(rec.jikanInfo.themes || [])];\n\n          // Check if at least one of the selected genres is present\n          const hasMatchingGenre = activeFilters.genres.some(genre => recGenres.includes(genre));\n          if (!hasMatchingGenre) {\n            return false;\n          }\n        }\n        return true;\n      });\n    });\n\n    // Load subreddits on component mount\n    onMounted(async () => {\n      try {\n        const response = await axios.get('/api/subreddits');\n        if (response.data.subreddits && Array.isArray(response.data.subreddits)) {\n          subreddits.value = response.data.subreddits;\n          if (response.data.subreddits.length > 0) {\n            subreddit.value = response.data.subreddits[0];\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao carregar subreddits:', error);\n      }\n\n      // Initialize Bootstrap modal\n      if (window.bootstrap) {\n        modal.value = new window.bootstrap.Modal(document.getElementById('detailsModal'));\n      }\n    });\n\n    // Search Reddit function\n    const searchReddit = async () => {\n      if (!topic.value) return;\n      try {\n        isLoading.value = true;\n        showResults.value = true;\n\n        // Scroll to results section\n        window.scrollTo({\n          top: document.querySelector('.container.mt-5').offsetTop - 100,\n          behavior: 'smooth'\n        });\n        const response = await axios.post('/api/search-and-summarize', {\n          topic: topic.value,\n          subreddit: subreddit.value\n        });\n        if (response.data.summary && response.data.summary.recomendacoes) {\n          recommendations.value = response.data.summary.recomendacoes;\n\n          // Extract genres for filters\n          extractGenres();\n        } else {\n          recommendations.value = [];\n        }\n      } catch (error) {\n        console.error('Erro na pesquisa:', error);\n        recommendations.value = [];\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Extract genres from recommendations\n    const extractGenres = () => {\n      const allGenres = new Set();\n      recommendations.value.forEach(rec => {\n        if (rec.jikanInfo && rec.jikanInfo.genres) {\n          rec.jikanInfo.genres.forEach(genre => {\n            allGenres.add(genre);\n          });\n        }\n        if (rec.jikanInfo && rec.jikanInfo.themes) {\n          rec.jikanInfo.themes.forEach(theme => {\n            allGenres.add(theme);\n          });\n        }\n      });\n      genres.value = Array.from(allGenres).sort();\n    };\n\n    // Toggle genre filter\n    const toggleGenreFilter = genre => {\n      if (genre === 'all') {\n        // Clear all genre filters\n        activeFilters.genres = [];\n      } else {\n        // Toggle the clicked genre\n        const index = activeFilters.genres.indexOf(genre);\n        if (index === -1) {\n          activeFilters.genres.push(genre);\n        } else {\n          activeFilters.genres.splice(index, 1);\n        }\n      }\n    };\n\n    // Apply filters\n    const applyFilters = () => {\n      // This function is empty because we're using computed properties\n      // But we keep it for potential future use\n    };\n\n    // Set view mode\n    const setViewMode = mode => {\n      viewMode.value = mode;\n    };\n\n    // Go to debug page\n    const goToDebug = () => {\n      router.push('/debug');\n    };\n\n    // Show details modal\n    const showDetailsModal = recommendation => {\n      selectedRecommendation.value = recommendation;\n      if (modal.value) {\n        modal.value.show();\n      }\n    };\n\n    // Format numbers (e.g., 1000 -> 1K)\n    const formatNumber = num => {\n      if (!num) return '0';\n      if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M';\n      }\n      if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'K';\n      }\n      return num.toString();\n    };\n    return {\n      topic,\n      subreddit,\n      subreddits,\n      isLoading,\n      showResults,\n      recommendations,\n      filteredRecommendations,\n      viewMode,\n      genres,\n      activeFilters,\n      selectedRecommendation,\n      searchReddit,\n      toggleGenreFilter,\n      applyFilters,\n      setViewMode,\n      goToDebug,\n      showDetailsModal,\n      formatNumber\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useRouter","RecommendationCard","axios","name","components","setup","router","topic","subreddit","subreddits","isLoading","showResults","recommendations","viewMode","genres","selectedRecommendation","modal","activeFilters","type","filteredRecommendations","value","filter","rec","jikanInfo","toLowerCase","length","recGenres","themes","hasMatchingGenre","some","genre","includes","response","get","data","Array","isArray","error","console","window","bootstrap","Modal","document","getElementById","searchReddit","scrollTo","top","querySelector","offsetTop","behavior","post","summary","recomendacoes","extractGenres","allGenres","Set","forEach","add","theme","from","sort","toggleGenreFilter","index","indexOf","push","splice","applyFilters","setViewMode","mode","goToDebug","showDetailsModal","recommendation","show","formatNumber","num","toFixed","toString"],"sources":["/home/geanwork/Documentos/Projetos/Pessoal/reddit-research/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <!-- Hero section -->\n    <div class=\"hero-section\">\n      <div class=\"container\">\n        <div class=\"row align-items-center min-vh-75\">\n          <div class=\"col-lg-6\">\n            <h1 class=\"display-4 fw-bold text-white mb-4\">Descubra suas próximas recomendações</h1>\n            <p class=\"lead text-white-75 mb-5\">Recomendações personalizadas baseadas em discussões reais de usuários no Reddit</p>\n            <div class=\"search-box bg-white p-3 rounded shadow\">\n              <form @submit.prevent=\"searchReddit\">\n                <div class=\"row g-2\">\n                  <div class=\"col-md-5\">\n                    <input type=\"text\" class=\"form-control form-control-lg\" v-model=\"topic\" placeholder=\"O que você está procurando?\" required>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <select class=\"form-select form-select-lg\" v-model=\"subreddit\">\n                      <option v-for=\"sub in subreddits\" :key=\"sub\" :value=\"sub\">r/{{ sub }}</option>\n                    </select>\n                  </div>\n                  <div class=\"col-md-3\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-lg w-100\" :disabled=\"isLoading\">\n                      <span class=\"spinner-border spinner-border-sm\" v-if=\"isLoading\" role=\"status\" aria-hidden=\"true\"></span>\n                      Descobrir\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div class=\"col-lg-6 d-none d-lg-block\">\n            <img src=\"https://via.placeholder.com/600x400\" alt=\"Recommendations collage\" class=\"img-fluid rounded shadow-lg\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Resultados section -->\n    <div class=\"container mt-5 mb-5\" v-if=\"showResults\">\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\n        <h2 class=\"section-title\">Recomendações para você</h2>\n        <div class=\"controls-wrapper d-flex align-items-center\">\n          <!-- Filtros -->\n          <div class=\"filters-container me-3\">\n            <select class=\"form-select form-select-sm\" v-model=\"activeFilters.type\" @change=\"applyFilters\">\n              <option value=\"all\">Todos os tipos</option>\n              <option value=\"tv\">Séries</option>\n              <option value=\"movie\">Filmes</option>\n              <option value=\"ova\">OVAs</option>\n              <option value=\"special\">Especiais</option>\n            </select>\n          </div>\n          <!-- Controles de visualização -->\n          <div class=\"view-controls\">\n            <button class=\"btn\" :class=\"viewMode === 'grid' ? 'btn-primary' : 'btn-outline-primary'\" @click=\"setViewMode('grid')\" title=\"Visualização em grid\">\n              <i class=\"fas fa-th-large\"></i>\n            </button>\n            <button class=\"btn me-2\" :class=\"viewMode === 'list' ? 'btn-primary' : 'btn-outline-primary'\" @click=\"setViewMode('list')\" title=\"Visualização em lista\">\n              <i class=\"fas fa-list\"></i>\n            </button>\n            <!-- Botão de debug -->\n            <button v-if=\"recommendations.length > 0\" @click=\"goToDebug\" class=\"btn btn-outline-secondary btn-sm\" title=\"Modo Debug\">\n              <i class=\"fas fa-bug\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Filtros adicionais -->\n      <div class=\"filters-row mb-4\" v-if=\"genres.length > 0\">\n        <div class=\"d-flex flex-wrap gap-2\">\n          <span \n            class=\"badge genre-filter\" \n            :class=\"activeFilters.genres.length === 0 ? 'bg-primary' : 'bg-secondary'\"\n            @click=\"toggleGenreFilter('all')\"\n          >\n            Todos\n          </span>\n          <span \n            v-for=\"genre in genres\" \n            :key=\"genre\" \n            class=\"badge genre-filter\" \n            :class=\"activeFilters.genres.includes(genre) ? 'bg-primary' : 'bg-secondary'\"\n            @click=\"toggleGenreFilter(genre)\"\n          >\n            {{ genre }}\n          </span>\n        </div>\n      </div>\n      \n      <div :class=\"['recommendations-container', viewMode + '-view']\">\n        <!-- Loading indicator -->\n        <div class=\"text-center py-5\" v-if=\"isLoading\">\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"visually-hidden\">Carregando...</span>\n          </div>\n          <p class=\"mt-3\">Buscando as melhores recomendações...</p>\n        </div>\n        \n        <!-- Recommendations -->\n        <div v-else-if=\"filteredRecommendations.length > 0\">\n          <recommendation-card \n            v-for=\"(rec, index) in filteredRecommendations\" \n            :key=\"index\" \n            :recommendation=\"rec\" \n            :view-mode=\"viewMode\"\n            @show-details=\"showDetailsModal(rec)\"\n          />\n        </div>\n        \n        <!-- No results -->\n        <div v-else class=\"alert alert-info\">\n          Não foi possível encontrar recomendações nos comentários.\n        </div>\n      </div>\n    </div>\n\n    <!-- Details Modal -->\n    <div class=\"modal fade\" id=\"detailsModal\" tabindex=\"-1\" aria-labelledby=\"detailsModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\" v-if=\"selectedRecommendation\">\n          <div class=\"modal-header bg-dark text-white\">\n            <h5 class=\"modal-title\" id=\"detailsModalLabel\">{{ selectedRecommendation.jikanInfo?.title_english || selectedRecommendation.titulo }}</h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                <img :src=\"selectedRecommendation.jikanInfo?.image_url\" :alt=\"selectedRecommendation.titulo\" class=\"img-fluid rounded\">\n                <div class=\"mt-3\">\n                  <div class=\"recommendation-score\">\n                    <i class=\"fas fa-star text-warning\"></i> \n                    {{ selectedRecommendation.jikanInfo?.score || 'N/A' }}\n                    <span v-if=\"selectedRecommendation.jikanInfo?.scored_by\">\n                      ({{ formatNumber(selectedRecommendation.jikanInfo.scored_by) }} avaliações)\n                    </span>\n                  </div>\n                  <div class=\"mt-2\">\n                    <span v-if=\"selectedRecommendation.jikanInfo?.type\">{{ selectedRecommendation.jikanInfo.type }}</span>\n                    <span v-if=\"selectedRecommendation.jikanInfo?.episodes\"> • {{ selectedRecommendation.jikanInfo.episodes }} episódios</span>\n                    <span v-if=\"selectedRecommendation.jikanInfo?.year\"> • {{ selectedRecommendation.jikanInfo.year }}</span>\n                  </div>\n                  <div class=\"mt-2\" v-if=\"selectedRecommendation.jikanInfo?.studios\">\n                    Studio: {{ selectedRecommendation.jikanInfo.studios.join(', ') }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-8\">\n                <h5>Sinopse</h5>\n                <p>{{ selectedRecommendation.jikanInfo?.synopsis || 'Sinopse não disponível.' }}</p>\n                \n                <h5 class=\"mt-4\">Gêneros</h5>\n                <div class=\"mb-3\">\n                  <span \n                    v-for=\"genre in selectedRecommendation.jikanInfo?.genres\" \n                    :key=\"genre\" \n                    class=\"badge bg-primary me-1 mb-1\"\n                  >\n                    {{ genre }}\n                  </span>\n                  <span \n                    v-for=\"theme in selectedRecommendation.jikanInfo?.themes\" \n                    :key=\"theme\" \n                    class=\"badge bg-secondary me-1 mb-1\"\n                  >\n                    {{ theme }}\n                  </span>\n                </div>\n                \n                <h5>Por que os usuários recomendam:</h5>\n                <ul class=\"motivos-list\">\n                  <li v-for=\"(motivo, i) in selectedRecommendation.motivos\" :key=\"i\">{{ motivo }}</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <a \n              v-if=\"selectedRecommendation.jikanInfo?.url\" \n              :href=\"selectedRecommendation.jikanInfo.url\" \n              target=\"_blank\" \n              class=\"btn btn-outline-primary\"\n            >\n              <i class=\"fas fa-external-link-alt\"></i> Ver Mais\n            </a>\n            <a \n              v-if=\"selectedRecommendation.jikanInfo?.trailer\" \n              :href=\"selectedRecommendation.jikanInfo.trailer\" \n              target=\"_blank\" \n              class=\"btn btn-outline-danger\"\n            >\n              <i class=\"fab fa-youtube\"></i> Trailer\n            </a>\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Fechar</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Footer -->\n    <footer class=\"bg-dark text-white py-4\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-12 text-center\">\n            <p>&copy; 2023 RecommendIt - Todas as recomendações são baseadas em opiniões reais de usuários</p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport RecommendationCard from '@/components/RecommendationCard.vue'\nimport axios from 'axios'\n\nexport default {\n  name: 'Home',\n  components: {\n    RecommendationCard\n  },\n  setup() {\n    const router = useRouter()\n    const topic = ref('')\n    const subreddit = ref('')\n    const subreddits = ref([])\n    const isLoading = ref(false)\n    const showResults = ref(false)\n    const recommendations = ref([])\n    const viewMode = ref('grid')\n    const genres = ref([])\n    const selectedRecommendation = ref(null)\n    const modal = ref(null)\n    \n    const activeFilters = reactive({\n      type: 'all',\n      genres: []\n    })\n    \n    // Computed property for filtered recommendations\n    const filteredRecommendations = computed(() => {\n      return recommendations.value.filter(rec => {\n        // Filter by type\n        if (activeFilters.type !== 'all' && rec.jikanInfo) {\n          const type = rec.jikanInfo.type ? rec.jikanInfo.type.toLowerCase() : ''\n          if (type !== activeFilters.type) {\n            return false\n          }\n        }\n        \n        // Filter by genre\n        if (activeFilters.genres.length > 0 && rec.jikanInfo) {\n          const recGenres = [\n            ...(rec.jikanInfo.genres || []),\n            ...(rec.jikanInfo.themes || [])\n          ]\n          \n          // Check if at least one of the selected genres is present\n          const hasMatchingGenre = activeFilters.genres.some(genre => \n            recGenres.includes(genre)\n          )\n          \n          if (!hasMatchingGenre) {\n            return false\n          }\n        }\n        \n        return true\n      })\n    })\n    \n    // Load subreddits on component mount\n    onMounted(async () => {\n      try {\n        const response = await axios.get('/api/subreddits')\n        if (response.data.subreddits && Array.isArray(response.data.subreddits)) {\n          subreddits.value = response.data.subreddits\n          if (response.data.subreddits.length > 0) {\n            subreddit.value = response.data.subreddits[0]\n          }\n        }\n      } catch (error) {\n        console.error('Erro ao carregar subreddits:', error)\n      }\n      \n      // Initialize Bootstrap modal\n      if (window.bootstrap) {\n        modal.value = new window.bootstrap.Modal(document.getElementById('detailsModal'))\n      }\n    })\n    \n    // Search Reddit function\n    const searchReddit = async () => {\n      if (!topic.value) return\n      \n      try {\n        isLoading.value = true\n        showResults.value = true\n        \n        // Scroll to results section\n        window.scrollTo({\n          top: document.querySelector('.container.mt-5').offsetTop - 100,\n          behavior: 'smooth'\n        })\n        \n        const response = await axios.post('/api/search-and-summarize', {\n          topic: topic.value,\n          subreddit: subreddit.value\n        })\n        \n        if (response.data.summary && response.data.summary.recomendacoes) {\n          recommendations.value = response.data.summary.recomendacoes\n          \n          // Extract genres for filters\n          extractGenres()\n        } else {\n          recommendations.value = []\n        }\n      } catch (error) {\n        console.error('Erro na pesquisa:', error)\n        recommendations.value = []\n      } finally {\n        isLoading.value = false\n      }\n    }\n    \n    // Extract genres from recommendations\n    const extractGenres = () => {\n      const allGenres = new Set()\n      \n      recommendations.value.forEach(rec => {\n        if (rec.jikanInfo && rec.jikanInfo.genres) {\n          rec.jikanInfo.genres.forEach(genre => {\n            allGenres.add(genre)\n          })\n        }\n        \n        if (rec.jikanInfo && rec.jikanInfo.themes) {\n          rec.jikanInfo.themes.forEach(theme => {\n            allGenres.add(theme)\n          })\n        }\n      })\n      \n      genres.value = Array.from(allGenres).sort()\n    }\n    \n    // Toggle genre filter\n    const toggleGenreFilter = (genre) => {\n      if (genre === 'all') {\n        // Clear all genre filters\n        activeFilters.genres = []\n      } else {\n        // Toggle the clicked genre\n        const index = activeFilters.genres.indexOf(genre)\n        if (index === -1) {\n          activeFilters.genres.push(genre)\n        } else {\n          activeFilters.genres.splice(index, 1)\n        }\n      }\n    }\n    \n    // Apply filters\n    const applyFilters = () => {\n      // This function is empty because we're using computed properties\n      // But we keep it for potential future use\n    }\n    \n    // Set view mode\n    const setViewMode = (mode) => {\n      viewMode.value = mode\n    }\n    \n    // Go to debug page\n    const goToDebug = () => {\n      router.push('/debug')\n    }\n    \n    // Show details modal\n    const showDetailsModal = (recommendation) => {\n      selectedRecommendation.value = recommendation\n      if (modal.value) {\n        modal.value.show()\n      }\n    }\n    \n    // Format numbers (e.g., 1000 -> 1K)\n    const formatNumber = (num) => {\n      if (!num) return '0'\n      if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M'\n      }\n      if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'K'\n      }\n      return num.toString()\n    }\n    \n    return {\n      topic,\n      subreddit,\n      subreddits,\n      isLoading,\n      showResults,\n      recommendations,\n      filteredRecommendations,\n      viewMode,\n      genres,\n      activeFilters,\n      selectedRecommendation,\n      searchReddit,\n      toggleGenreFilter,\n      applyFilters,\n      setViewMode,\n      goToDebug,\n      showDetailsModal,\n      formatNumber\n    }\n  }\n}\n</script>\n\n<style scoped>\n.hero-section {\n  background: linear-gradient(135deg, #4a148c 0%, #7b1fa2 100%);\n  padding: 80px 0;\n  color: white;\n  position: relative;\n  overflow: hidden;\n}\n\n.hero-section::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url('https://images.unsplash.com/photo-1541562232579-512a21360020?ixlib=rb-4.0.3&auto=format&fit=crop&w=1950&q=80');\n  background-size: cover;\n  background-position: center;\n  opacity: 0.2;\n  z-index: 0;\n}\n\n.hero-section .container {\n  position: relative;\n  z-index: 1;\n}\n\n.text-white-75 {\n  color: rgba(255, 255, 255, 0.75);\n}\n\n.min-vh-75 {\n  min-height: 75vh;\n}\n\n.search-box {\n  border-radius: 10px;\n  transition: all 0.3s ease;\n}\n\n.search-box:hover {\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n}\n\n.section-title {\n  font-size: 28px;\n  font-weight: 700;\n  color: #212529;\n  position: relative;\n  padding-bottom: 10px;\n}\n\n.section-title::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 50px;\n  height: 3px;\n  background-color: #7b1fa2;\n}\n\n.recommendations-container {\n  transition: all 0.3s ease;\n  width: 100%;\n}\n\n.recommendations-container.grid-view {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: 25px;\n  width: 100%;\n}\n\n.recommendations-container.list-view {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 100%;\n}\n\n.genre-filter {\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n/* Animation for results */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.recommendations-container {\n  animation: fadeInUp 0.5s ease-out;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}