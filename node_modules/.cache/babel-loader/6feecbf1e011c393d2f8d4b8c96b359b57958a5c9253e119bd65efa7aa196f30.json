{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport TimelineItem from '@/components/TimelineItem.vue';\nexport default {\n  name: 'Debug',\n  components: {\n    TimelineItem\n  },\n  setup() {\n    const router = useRouter();\n    const copyButtonText = ref('Copiar');\n    const expandedJikanItems = ref([]);\n\n    // Debug data\n    const debugData = reactive({\n      topic: '',\n      subreddit: '',\n      timestamp: '',\n      searchResults: [],\n      aggregatedText: '',\n      aiResponse: null,\n      jikanData: []\n    });\n\n    // Timeline status\n    const timelineStatus = reactive({\n      input: {\n        status: 'waiting',\n        message: 'Carregando...'\n      },\n      reddit: {\n        status: 'waiting',\n        message: 'Aguardando...'\n      },\n      aggregate: {\n        status: 'waiting',\n        message: 'Aguardando...'\n      },\n      ai: {\n        status: 'waiting',\n        message: 'Aguardando...'\n      },\n      jikan: {\n        status: 'waiting',\n        message: 'Aguardando...'\n      }\n    });\n\n    // Load debug data from localStorage on mount\n    onMounted(() => {\n      const storedData = localStorage.getItem('debugData');\n      if (storedData) {\n        const parsedData = JSON.parse(storedData);\n        Object.assign(debugData, parsedData);\n\n        // Update timeline status\n        timelineStatus.input.status = 'completed';\n        timelineStatus.input.message = `Consulta: \"${debugData.topic}\" em r/${debugData.subreddit}`;\n        if (debugData.searchResults && debugData.searchResults.length > 0) {\n          timelineStatus.reddit.status = 'completed';\n          timelineStatus.reddit.message = `${debugData.searchResults.length} posts encontrados`;\n        } else {\n          timelineStatus.reddit.status = 'error';\n          timelineStatus.reddit.message = 'Falha na busca do Reddit';\n        }\n        if (debugData.aggregatedText) {\n          timelineStatus.aggregate.status = 'completed';\n          timelineStatus.aggregate.message = `${debugData.aggregatedText.length} caracteres agregados`;\n        } else {\n          timelineStatus.aggregate.status = 'error';\n          timelineStatus.aggregate.message = 'Falha na agregação de comentários';\n        }\n        if (debugData.aiResponse) {\n          timelineStatus.ai.status = 'completed';\n          timelineStatus.ai.message = `${debugData.aiResponse.recomendacoes ? debugData.aiResponse.recomendacoes.length : 0} recomendações geradas`;\n        } else {\n          timelineStatus.ai.status = 'error';\n          timelineStatus.ai.message = 'Falha na análise com IA';\n        }\n        if (debugData.jikanData && debugData.jikanData.length > 0) {\n          const enrichedCount = debugData.jikanData.filter(rec => rec.jikanInfo).length;\n          timelineStatus.jikan.status = 'completed';\n          timelineStatus.jikan.message = `${enrichedCount} itens enriquecidos com dados adicionais`;\n        } else {\n          timelineStatus.jikan.status = 'error';\n          timelineStatus.jikan.message = 'Nenhuma informação adicional disponível';\n        }\n      } else {\n        // Se não houver dados de debug, mostrar mensagem de erro\n        timelineStatus.input.status = 'error';\n        timelineStatus.input.message = 'Nenhum dado de debug disponível';\n        timelineStatus.reddit.status = 'error';\n        timelineStatus.reddit.message = 'Nenhum dado de debug disponível';\n        timelineStatus.aggregate.status = 'error';\n        timelineStatus.aggregate.message = 'Nenhum dado de debug disponível';\n        timelineStatus.ai.status = 'error';\n        timelineStatus.ai.message = 'Nenhum dado de debug disponível';\n        timelineStatus.jikan.status = 'error';\n        timelineStatus.jikan.message = 'Nenhum dado de debug disponível';\n      }\n    });\n\n    // Format date\n    const formatDate = timestamp => {\n      if (!timestamp) return '';\n      return new Date(timestamp).toLocaleDateString('pt-BR');\n    };\n\n    // Copy aggregated text\n    const copyAggregatedText = () => {\n      if (!debugData.aggregatedText) return;\n      navigator.clipboard.writeText(debugData.aggregatedText).then(() => {\n        copyButtonText.value = 'Copiado!';\n        setTimeout(() => {\n          copyButtonText.value = 'Copiar';\n        }, 2000);\n      }).catch(err => {\n        console.error('Erro ao copiar texto:', err);\n        alert('Não foi possível copiar o texto. Por favor, tente novamente.');\n      });\n    };\n\n    // Toggle Jikan details\n    const toggleJikanDetails = index => {\n      const currentIndex = expandedJikanItems.value.indexOf(index);\n      if (currentIndex === -1) {\n        expandedJikanItems.value.push(index);\n      } else {\n        expandedJikanItems.value.splice(currentIndex, 1);\n      }\n    };\n\n    // Go back to home\n    const goToHome = () => {\n      router.push('/');\n    };\n    return {\n      debugData,\n      timelineStatus,\n      copyButtonText,\n      expandedJikanItems,\n      formatDate,\n      copyAggregatedText,\n      toggleJikanDetails,\n      goToHome\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useRouter","TimelineItem","name","components","setup","router","copyButtonText","expandedJikanItems","debugData","topic","subreddit","timestamp","searchResults","aggregatedText","aiResponse","jikanData","timelineStatus","input","status","message","reddit","aggregate","ai","jikan","storedData","localStorage","getItem","parsedData","JSON","parse","Object","assign","length","recomendacoes","enrichedCount","filter","rec","jikanInfo","formatDate","Date","toLocaleDateString","copyAggregatedText","navigator","clipboard","writeText","then","value","setTimeout","catch","err","console","error","alert","toggleJikanDetails","index","currentIndex","indexOf","push","splice","goToHome"],"sources":["/home/geanwork/Documentos/Projetos/Pessoal/reddit-research/src/views/Debug.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gray-50\">\n    <div class=\"w-full\">\n      <div class=\"bg-gray-900 text-white p-4\">\n        <div class=\"flex justify-between items-center\">\n          <h1 class=\"text-xl font-semibold mb-0\">Modo Debug - Detalhes Técnicos</h1>\n          <button @click=\"goToHome\" class=\"px-3 py-1 border border-white rounded-md text-white hover:bg-white hover:text-gray-900 transition-colors duration-200 text-sm\">\n            <i class=\"fas fa-arrow-left mr-1\"></i> Voltar para Resultados\n          </button>\n        </div>\n      </div>\n\n      <!-- Timeline de processamento -->\n      <div class=\"container mx-auto mt-8 px-4\">\n        <h2 class=\"text-xl font-semibold mb-6\">Timeline de Processamento</h2>\n        \n        <div class=\"timeline\">\n          <!-- Etapas do processamento -->\n          <timeline-item \n            step=\"input\" \n            icon=\"fas fa-search\" \n            title=\"Consulta do Usuário\"\n            :status=\"timelineStatus.input.status\"\n            :message=\"timelineStatus.input.message\"\n          >\n            <template #details>\n              <div class=\"mt-2 bg-white rounded-lg shadow-sm\">\n                <div class=\"p-4\">\n                  <p><strong>Tópico:</strong> {{ debugData.topic }}</p>\n                  <p><strong>Subreddit:</strong> {{ debugData.subreddit }}</p>\n                  <p><strong>Timestamp:</strong> {{ debugData.timestamp }}</p>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n          \n          <timeline-item \n            step=\"reddit\" \n            icon=\"fab fa-reddit-alien\" \n            title=\"Busca no Reddit\"\n            :status=\"timelineStatus.reddit.status\"\n            :message=\"timelineStatus.reddit.message\"\n          >\n            <template #details>\n              <div class=\"mt-2 bg-white rounded-lg shadow-sm\">\n                <div class=\"border-b border-gray-200 px-4 py-3\">\n                  <h4 class=\"text-sm font-semibold mb-0\">Posts Encontrados</h4>\n                </div>\n                <div class=\"p-4\">\n                  <div v-if=\"debugData.searchResults && debugData.searchResults.length > 0\">\n                    <div class=\"space-y-3\">\n                      <div v-for=\"(post, index) in debugData.searchResults\" :key=\"index\" class=\"border border-gray-200 rounded-md p-3\">\n                        <div class=\"flex justify-between\">\n                          <h5 class=\"font-medium\">{{ post.title }}</h5>\n                          <span class=\"text-sm text-gray-500\">Score: {{ post.score }}</span>\n                        </div>\n                        <p class=\"text-sm text-gray-500 mb-2\">\n                          Por u/{{ post.author }} • {{ formatDate(post.created) }} • {{ post.commentCount }} comentários\n                        </p>\n                        <a :href=\"post.url\" target=\"_blank\" class=\"text-sm text-blue-600 hover:underline\">Ver no Reddit <i class=\"fas fa-external-link-alt\"></i></a>\n                      </div>\n                    </div>\n                  </div>\n                  <div v-else class=\"bg-blue-50 border-l-4 border-blue-500 text-blue-700 p-4 rounded\">\n                    Nenhum resultado encontrado para este tema.\n                  </div>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n          \n          <timeline-item \n            step=\"aggregate\" \n            icon=\"fas fa-align-left\" \n            title=\"Agregação de Comentários\"\n            :status=\"timelineStatus.aggregate.status\"\n            :message=\"timelineStatus.aggregate.message\"\n          >\n            <template #details>\n              <div class=\"mt-2 bg-white rounded-lg shadow-sm\">\n                <div class=\"border-b border-gray-200 px-4 py-3 flex justify-between items-center\">\n                  <h4 class=\"text-sm font-semibold mb-0\">Texto Agregado</h4>\n                  <button class=\"px-2 py-1 border border-gray-300 rounded text-sm text-gray-700 hover:bg-gray-100 transition-colors\" @click=\"copyAggregatedText\">\n                    {{ copyButtonText }}\n                  </button>\n                </div>\n                <div class=\"p-4\">\n                  <div class=\"p-3 bg-gray-100 rounded-md whitespace-pre-wrap text-sm\">\n                    {{ debugData.aggregatedText || 'Nenhum texto agregado disponível.' }}\n                  </div>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n          \n          <timeline-item \n            step=\"ai\" \n            icon=\"fas fa-robot\" \n            title=\"Análise com IA (Gemini)\"\n            :status=\"timelineStatus.ai.status\"\n            :message=\"timelineStatus.ai.message\"\n          >\n            <template #details>\n              <div class=\"mt-2 bg-white rounded-lg shadow-sm\">\n                <div class=\"border-b border-gray-200 px-4 py-3\">\n                  <h4 class=\"text-sm font-semibold mb-0\">Resposta da IA</h4>\n                </div>\n                <div class=\"p-4\">\n                  <div class=\"p-3 bg-gray-100 rounded-md overflow-auto\">\n                    <pre class=\"text-xs\">{{ debugData.aiResponse ? JSON.stringify(debugData.aiResponse, null, 2) : 'Nenhuma resposta da IA disponível.' }}</pre>\n                  </div>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n          \n          <timeline-item \n            step=\"jikan\" \n            icon=\"fas fa-database\" \n            title=\"Enriquecimento com API Externa\"\n            :status=\"timelineStatus.jikan.status\"\n            :message=\"timelineStatus.jikan.message\"\n            :is-last-item=\"true\"\n          >\n            <template #details>\n              <div class=\"mt-2 bg-white rounded-lg shadow-sm\">\n                <div class=\"border-b border-gray-200 px-4 py-3\">\n                  <h4 class=\"text-sm font-semibold mb-0\">Dados Adicionais</h4>\n                </div>\n                <div class=\"p-4\">\n                  <div v-if=\"debugData.jikanData && debugData.jikanData.length > 0\">\n                    <div class=\"space-y-2\">\n                      <div v-for=\"(rec, index) in debugData.jikanData\" :key=\"index\" class=\"border border-gray-200 rounded-md overflow-hidden\">\n                        <div \n                          class=\"px-4 py-3 bg-gray-100 cursor-pointer\"\n                          @click=\"toggleJikanDetails(index)\"\n                        >\n                          <div class=\"flex items-center\">\n                            <i :class=\"expandedJikanItems.includes(index) ? 'fas fa-chevron-down' : 'fas fa-chevron-right'\" class=\"mr-2 text-gray-500\"></i>\n                            <span class=\"font-medium\">{{ rec.jikanInfo?.title_english || rec.titulo }}</span>\n                          </div>\n                        </div>\n                        <div v-show=\"expandedJikanItems.includes(index)\" class=\"p-4\">\n                          <pre class=\"bg-gray-50 p-3 rounded-md text-xs overflow-auto\">{{ JSON.stringify(rec.jikanInfo, null, 2) }}</pre>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div v-else class=\"bg-blue-50 border-l-4 border-blue-500 text-blue-700 p-4 rounded\">\n                    Nenhuma informação adicional disponível.\n                  </div>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport TimelineItem from '@/components/TimelineItem.vue'\n\nexport default {\n  name: 'Debug',\n  components: {\n    TimelineItem\n  },\n  setup() {\n    const router = useRouter()\n    const copyButtonText = ref('Copiar')\n    const expandedJikanItems = ref([])\n    \n    // Debug data\n    const debugData = reactive({\n      topic: '',\n      subreddit: '',\n      timestamp: '',\n      searchResults: [],\n      aggregatedText: '',\n      aiResponse: null,\n      jikanData: []\n    })\n    \n    // Timeline status\n    const timelineStatus = reactive({\n      input: { status: 'waiting', message: 'Carregando...' },\n      reddit: { status: 'waiting', message: 'Aguardando...' },\n      aggregate: { status: 'waiting', message: 'Aguardando...' },\n      ai: { status: 'waiting', message: 'Aguardando...' },\n      jikan: { status: 'waiting', message: 'Aguardando...' }\n    })\n    \n    // Load debug data from localStorage on mount\n    onMounted(() => {\n      const storedData = localStorage.getItem('debugData')\n      if (storedData) {\n        const parsedData = JSON.parse(storedData)\n        Object.assign(debugData, parsedData)\n        \n        // Update timeline status\n        timelineStatus.input.status = 'completed'\n        timelineStatus.input.message = `Consulta: \"${debugData.topic}\" em r/${debugData.subreddit}`\n        \n        if (debugData.searchResults && debugData.searchResults.length > 0) {\n          timelineStatus.reddit.status = 'completed'\n          timelineStatus.reddit.message = `${debugData.searchResults.length} posts encontrados`\n        } else {\n          timelineStatus.reddit.status = 'error'\n          timelineStatus.reddit.message = 'Falha na busca do Reddit'\n        }\n        \n        if (debugData.aggregatedText) {\n          timelineStatus.aggregate.status = 'completed'\n          timelineStatus.aggregate.message = `${debugData.aggregatedText.length} caracteres agregados`\n        } else {\n          timelineStatus.aggregate.status = 'error'\n          timelineStatus.aggregate.message = 'Falha na agregação de comentários'\n        }\n        \n        if (debugData.aiResponse) {\n          timelineStatus.ai.status = 'completed'\n          timelineStatus.ai.message = `${debugData.aiResponse.recomendacoes ? debugData.aiResponse.recomendacoes.length : 0} recomendações geradas`\n        } else {\n          timelineStatus.ai.status = 'error'\n          timelineStatus.ai.message = 'Falha na análise com IA'\n        }\n        \n        if (debugData.jikanData && debugData.jikanData.length > 0) {\n          const enrichedCount = debugData.jikanData.filter(rec => rec.jikanInfo).length\n          timelineStatus.jikan.status = 'completed'\n          timelineStatus.jikan.message = `${enrichedCount} itens enriquecidos com dados adicionais`\n        } else {\n          timelineStatus.jikan.status = 'error'\n          timelineStatus.jikan.message = 'Nenhuma informação adicional disponível'\n        }\n      } else {\n        // Se não houver dados de debug, mostrar mensagem de erro\n        timelineStatus.input.status = 'error'\n        timelineStatus.input.message = 'Nenhum dado de debug disponível'\n        timelineStatus.reddit.status = 'error'\n        timelineStatus.reddit.message = 'Nenhum dado de debug disponível'\n        timelineStatus.aggregate.status = 'error'\n        timelineStatus.aggregate.message = 'Nenhum dado de debug disponível'\n        timelineStatus.ai.status = 'error'\n        timelineStatus.ai.message = 'Nenhum dado de debug disponível'\n        timelineStatus.jikan.status = 'error'\n        timelineStatus.jikan.message = 'Nenhum dado de debug disponível'\n      }\n    })\n    \n    // Format date\n    const formatDate = (timestamp) => {\n      if (!timestamp) return ''\n      return new Date(timestamp).toLocaleDateString('pt-BR')\n    }\n    \n    // Copy aggregated text\n    const copyAggregatedText = () => {\n      if (!debugData.aggregatedText) return\n      \n      navigator.clipboard.writeText(debugData.aggregatedText)\n        .then(() => {\n          copyButtonText.value = 'Copiado!'\n          setTimeout(() => {\n            copyButtonText.value = 'Copiar'\n          }, 2000)\n        })\n        .catch(err => {\n          console.error('Erro ao copiar texto:', err)\n          alert('Não foi possível copiar o texto. Por favor, tente novamente.')\n        })\n    }\n    \n    // Toggle Jikan details\n    const toggleJikanDetails = (index) => {\n      const currentIndex = expandedJikanItems.value.indexOf(index)\n      if (currentIndex === -1) {\n        expandedJikanItems.value.push(index)\n      } else {\n        expandedJikanItems.value.splice(currentIndex, 1)\n      }\n    }\n    \n    // Go back to home\n    const goToHome = () => {\n      router.push('/')\n    }\n    \n    return {\n      debugData,\n      timelineStatus,\n      copyButtonText,\n      expandedJikanItems,\n      formatDate,\n      copyAggregatedText,\n      toggleJikanDetails,\n      goToHome\n    }\n  }\n}\n</script>\n\n<style scoped>\n.debug-screen {\n  min-height: 100vh;\n  background-color: #f8f9fa;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}