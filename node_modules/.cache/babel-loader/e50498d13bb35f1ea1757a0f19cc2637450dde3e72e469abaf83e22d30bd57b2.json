{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport TimelineItem from '@/components/TimelineItem.vue';\nexport default {\n  name: 'Debug',\n  components: {\n    TimelineItem\n  },\n  setup() {\n    const router = useRouter();\n    const copyButtonText = ref('Copiar');\n\n    // Debug data\n    const debugData = reactive({\n      topic: '',\n      subreddit: '',\n      timestamp: '',\n      searchResults: [],\n      aggregatedText: '',\n      aiResponse: null,\n      jikanData: []\n    });\n\n    // Timeline status\n    const timelineStatus = reactive({\n      input: {\n        status: 'waiting',\n        message: 'Carregando...'\n      },\n      reddit: {\n        status: 'waiting',\n        message: 'Aguardando...'\n      },\n      aggregate: {\n        status: 'waiting',\n        message: 'Aguardando...'\n      },\n      ai: {\n        status: 'waiting',\n        message: 'Aguardando...'\n      },\n      jikan: {\n        status: 'waiting',\n        message: 'Aguardando...'\n      }\n    });\n\n    // Load debug data from localStorage on mount\n    onMounted(() => {\n      const storedData = localStorage.getItem('debugData');\n      if (storedData) {\n        const parsedData = JSON.parse(storedData);\n        Object.assign(debugData, parsedData);\n\n        // Update timeline status\n        timelineStatus.input.status = 'completed';\n        timelineStatus.input.message = `Consulta: \"${debugData.topic}\" em r/${debugData.subreddit}`;\n        if (debugData.searchResults && debugData.searchResults.length > 0) {\n          timelineStatus.reddit.status = 'completed';\n          timelineStatus.reddit.message = `${debugData.searchResults.length} posts encontrados`;\n        } else {\n          timelineStatus.reddit.status = 'error';\n          timelineStatus.reddit.message = 'Falha na busca do Reddit';\n        }\n        if (debugData.aggregatedText) {\n          timelineStatus.aggregate.status = 'completed';\n          timelineStatus.aggregate.message = `${debugData.aggregatedText.length} caracteres agregados`;\n        } else {\n          timelineStatus.aggregate.status = 'error';\n          timelineStatus.aggregate.message = 'Falha na agregação de comentários';\n        }\n        if (debugData.aiResponse) {\n          timelineStatus.ai.status = 'completed';\n          timelineStatus.ai.message = `${debugData.aiResponse.recomendacoes ? debugData.aiResponse.recomendacoes.length : 0} recomendações geradas`;\n        } else {\n          timelineStatus.ai.status = 'error';\n          timelineStatus.ai.message = 'Falha na análise com IA';\n        }\n        if (debugData.jikanData && debugData.jikanData.length > 0) {\n          const enrichedCount = debugData.jikanData.filter(rec => rec.jikanInfo).length;\n          timelineStatus.jikan.status = 'completed';\n          timelineStatus.jikan.message = `${enrichedCount} itens enriquecidos com dados adicionais`;\n        } else {\n          timelineStatus.jikan.status = 'error';\n          timelineStatus.jikan.message = 'Nenhuma informação adicional disponível';\n        }\n      }\n\n      // Initialize Bootstrap accordions\n      if (window.bootstrap) {\n        const accordionItems = document.querySelectorAll('.accordion-collapse');\n        accordionItems.forEach(item => {\n          new window.bootstrap.Collapse(item, {\n            toggle: false\n          });\n        });\n      }\n    });\n\n    // Format date\n    const formatDate = timestamp => {\n      if (!timestamp) return '';\n      return new Date(timestamp).toLocaleDateString('pt-BR');\n    };\n\n    // Copy aggregated text\n    const copyAggregatedText = () => {\n      if (!debugData.aggregatedText) return;\n      navigator.clipboard.writeText(debugData.aggregatedText).then(() => {\n        copyButtonText.value = 'Copiado!';\n        setTimeout(() => {\n          copyButtonText.value = 'Copiar';\n        }, 2000);\n      }).catch(err => {\n        console.error('Erro ao copiar texto:', err);\n        alert('Não foi possível copiar o texto. Por favor, tente novamente.');\n      });\n    };\n\n    // Go back to home\n    const goToHome = () => {\n      router.push('/');\n    };\n    return {\n      debugData,\n      timelineStatus,\n      copyButtonText,\n      formatDate,\n      copyAggregatedText,\n      goToHome\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useRouter","TimelineItem","name","components","setup","router","copyButtonText","debugData","topic","subreddit","timestamp","searchResults","aggregatedText","aiResponse","jikanData","timelineStatus","input","status","message","reddit","aggregate","ai","jikan","storedData","localStorage","getItem","parsedData","JSON","parse","Object","assign","length","recomendacoes","enrichedCount","filter","rec","jikanInfo","window","bootstrap","accordionItems","document","querySelectorAll","forEach","item","Collapse","toggle","formatDate","Date","toLocaleDateString","copyAggregatedText","navigator","clipboard","writeText","then","value","setTimeout","catch","err","console","error","alert","goToHome","push"],"sources":["/home/geanwork/Documentos/Projetos/Pessoal/reddit-research/src/views/Debug.vue"],"sourcesContent":["<template>\n  <div class=\"debug-screen\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12 bg-dark text-white p-3\">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <h1 class=\"h4 mb-0\">Modo Debug - Detalhes Técnicos</h1>\n            <button @click=\"goToHome\" class=\"btn btn-outline-light btn-sm\">\n              <i class=\"fas fa-arrow-left me-1\"></i> Voltar para Resultados\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Timeline de processamento -->\n      <div class=\"container mt-4\">\n        <h2 class=\"h4 mb-4\">Timeline de Processamento</h2>\n        \n        <div class=\"timeline\">\n          <!-- Etapas do processamento -->\n          <timeline-item \n            step=\"input\" \n            icon=\"fas fa-search\" \n            title=\"Consulta do Usuário\"\n            :status=\"timelineStatus.input.status\"\n            :message=\"timelineStatus.input.message\"\n          >\n            <template #details>\n              <div class=\"card mt-2\">\n                <div class=\"card-body\">\n                  <p><strong>Tópico:</strong> {{ debugData.topic }}</p>\n                  <p><strong>Subreddit:</strong> {{ debugData.subreddit }}</p>\n                  <p><strong>Timestamp:</strong> {{ debugData.timestamp }}</p>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n          \n          <timeline-item \n            step=\"reddit\" \n            icon=\"fab fa-reddit-alien\" \n            title=\"Busca no Reddit\"\n            :status=\"timelineStatus.reddit.status\"\n            :message=\"timelineStatus.reddit.message\"\n          >\n            <template #details>\n              <div class=\"card mt-2\">\n                <div class=\"card-header\">\n                  <h4 class=\"h6 mb-0\">Posts Encontrados</h4>\n                </div>\n                <div class=\"card-body\">\n                  <div v-if=\"debugData.searchResults && debugData.searchResults.length > 0\">\n                    <div class=\"list-group\">\n                      <div v-for=\"(post, index) in debugData.searchResults\" :key=\"index\" class=\"list-group-item\">\n                        <div class=\"d-flex w-100 justify-content-between\">\n                          <h5 class=\"mb-1\">{{ post.title }}</h5>\n                          <small>Score: {{ post.score }}</small>\n                        </div>\n                        <p class=\"mb-1\">\n                          <small>Por u/{{ post.author }} • {{ formatDate(post.created) }} • {{ post.commentCount }} comentários</small>\n                        </p>\n                        <small><a :href=\"post.url\" target=\"_blank\" class=\"text-primary\">Ver no Reddit <i class=\"fas fa-external-link-alt\"></i></a></small>\n                      </div>\n                    </div>\n                  </div>\n                  <div v-else class=\"alert alert-info\">\n                    Nenhum resultado encontrado para este tema.\n                  </div>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n          \n          <timeline-item \n            step=\"aggregate\" \n            icon=\"fas fa-align-left\" \n            title=\"Agregação de Comentários\"\n            :status=\"timelineStatus.aggregate.status\"\n            :message=\"timelineStatus.aggregate.message\"\n          >\n            <template #details>\n              <div class=\"card mt-2\">\n                <div class=\"card-header d-flex justify-content-between align-items-center\">\n                  <h4 class=\"h6 mb-0\">Texto Agregado</h4>\n                  <button class=\"btn btn-sm btn-outline-secondary\" @click=\"copyAggregatedText\">\n                    {{ copyButtonText }}\n                  </button>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"p-3 bg-light rounded\">\n                    {{ debugData.aggregatedText || 'Nenhum texto agregado disponível.' }}\n                  </div>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n          \n          <timeline-item \n            step=\"ai\" \n            icon=\"fas fa-robot\" \n            title=\"Análise com IA (Gemini)\"\n            :status=\"timelineStatus.ai.status\"\n            :message=\"timelineStatus.ai.message\"\n          >\n            <template #details>\n              <div class=\"card mt-2\">\n                <div class=\"card-header\">\n                  <h4 class=\"h6 mb-0\">Resposta da IA</h4>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"p-3 bg-light rounded\">\n                    <pre>{{ debugData.aiResponse ? JSON.stringify(debugData.aiResponse, null, 2) : 'Nenhuma resposta da IA disponível.' }}</pre>\n                  </div>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n          \n          <timeline-item \n            step=\"jikan\" \n            icon=\"fas fa-database\" \n            title=\"Enriquecimento com API Externa\"\n            :status=\"timelineStatus.jikan.status\"\n            :message=\"timelineStatus.jikan.message\"\n          >\n            <template #details>\n              <div class=\"card mt-2\">\n                <div class=\"card-header\">\n                  <h4 class=\"h6 mb-0\">Dados Adicionais</h4>\n                </div>\n                <div class=\"card-body\">\n                  <div v-if=\"debugData.jikanData && debugData.jikanData.length > 0\">\n                    <div class=\"accordion\" id=\"jikanAccordion\">\n                      <div v-for=\"(rec, index) in debugData.jikanData\" :key=\"index\" class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" :id=\"'jikan-heading-' + index\">\n                          <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" :data-bs-target=\"'#jikan-collapse-' + index\" aria-expanded=\"false\" :aria-controls=\"'jikan-collapse-' + index\">\n                            {{ rec.jikanInfo?.title_english || rec.titulo }}\n                          </button>\n                        </h2>\n                        <div :id=\"'jikan-collapse-' + index\" class=\"accordion-collapse collapse\" :aria-labelledby=\"'jikan-heading-' + index\" data-bs-parent=\"#jikanAccordion\">\n                          <div class=\"accordion-body\">\n                            <pre class=\"bg-light p-3 rounded\">{{ JSON.stringify(rec.jikanInfo, null, 2) }}</pre>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div v-else class=\"alert alert-info\">\n                    Nenhuma informação adicional disponível.\n                  </div>\n                </div>\n              </div>\n            </template>\n          </timeline-item>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport TimelineItem from '@/components/TimelineItem.vue'\n\nexport default {\n  name: 'Debug',\n  components: {\n    TimelineItem\n  },\n  setup() {\n    const router = useRouter()\n    const copyButtonText = ref('Copiar')\n    \n    // Debug data\n    const debugData = reactive({\n      topic: '',\n      subreddit: '',\n      timestamp: '',\n      searchResults: [],\n      aggregatedText: '',\n      aiResponse: null,\n      jikanData: []\n    })\n    \n    // Timeline status\n    const timelineStatus = reactive({\n      input: { status: 'waiting', message: 'Carregando...' },\n      reddit: { status: 'waiting', message: 'Aguardando...' },\n      aggregate: { status: 'waiting', message: 'Aguardando...' },\n      ai: { status: 'waiting', message: 'Aguardando...' },\n      jikan: { status: 'waiting', message: 'Aguardando...' }\n    })\n    \n    // Load debug data from localStorage on mount\n    onMounted(() => {\n      const storedData = localStorage.getItem('debugData')\n      if (storedData) {\n        const parsedData = JSON.parse(storedData)\n        Object.assign(debugData, parsedData)\n        \n        // Update timeline status\n        timelineStatus.input.status = 'completed'\n        timelineStatus.input.message = `Consulta: \"${debugData.topic}\" em r/${debugData.subreddit}`\n        \n        if (debugData.searchResults && debugData.searchResults.length > 0) {\n          timelineStatus.reddit.status = 'completed'\n          timelineStatus.reddit.message = `${debugData.searchResults.length} posts encontrados`\n        } else {\n          timelineStatus.reddit.status = 'error'\n          timelineStatus.reddit.message = 'Falha na busca do Reddit'\n        }\n        \n        if (debugData.aggregatedText) {\n          timelineStatus.aggregate.status = 'completed'\n          timelineStatus.aggregate.message = `${debugData.aggregatedText.length} caracteres agregados`\n        } else {\n          timelineStatus.aggregate.status = 'error'\n          timelineStatus.aggregate.message = 'Falha na agregação de comentários'\n        }\n        \n        if (debugData.aiResponse) {\n          timelineStatus.ai.status = 'completed'\n          timelineStatus.ai.message = `${debugData.aiResponse.recomendacoes ? debugData.aiResponse.recomendacoes.length : 0} recomendações geradas`\n        } else {\n          timelineStatus.ai.status = 'error'\n          timelineStatus.ai.message = 'Falha na análise com IA'\n        }\n        \n        if (debugData.jikanData && debugData.jikanData.length > 0) {\n          const enrichedCount = debugData.jikanData.filter(rec => rec.jikanInfo).length\n          timelineStatus.jikan.status = 'completed'\n          timelineStatus.jikan.message = `${enrichedCount} itens enriquecidos com dados adicionais`\n        } else {\n          timelineStatus.jikan.status = 'error'\n          timelineStatus.jikan.message = 'Nenhuma informação adicional disponível'\n        }\n      }\n      \n      // Initialize Bootstrap accordions\n      if (window.bootstrap) {\n        const accordionItems = document.querySelectorAll('.accordion-collapse')\n        accordionItems.forEach(item => {\n          new window.bootstrap.Collapse(item, { toggle: false })\n        })\n      }\n    })\n    \n    // Format date\n    const formatDate = (timestamp) => {\n      if (!timestamp) return ''\n      return new Date(timestamp).toLocaleDateString('pt-BR')\n    }\n    \n    // Copy aggregated text\n    const copyAggregatedText = () => {\n      if (!debugData.aggregatedText) return\n      \n      navigator.clipboard.writeText(debugData.aggregatedText)\n        .then(() => {\n          copyButtonText.value = 'Copiado!'\n          setTimeout(() => {\n            copyButtonText.value = 'Copiar'\n          }, 2000)\n        })\n        .catch(err => {\n          console.error('Erro ao copiar texto:', err)\n          alert('Não foi possível copiar o texto. Por favor, tente novamente.')\n        })\n    }\n    \n    // Go back to home\n    const goToHome = () => {\n      router.push('/')\n    }\n    \n    return {\n      debugData,\n      timelineStatus,\n      copyButtonText,\n      formatDate,\n      copyAggregatedText,\n      goToHome\n    }\n  }\n}\n</script>\n\n<style scoped>\n.debug-screen {\n  min-height: 100vh;\n  background-color: #f8f9fa;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}