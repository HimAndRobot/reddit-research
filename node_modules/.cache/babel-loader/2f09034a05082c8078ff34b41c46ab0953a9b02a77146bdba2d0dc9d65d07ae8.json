{"ast":null,"code":"import { computed } from 'vue';\nexport default {\n  name: 'RecommendationCard',\n  props: {\n    recommendation: {\n      type: Object,\n      required: true\n    },\n    viewMode: {\n      type: String,\n      default: 'grid'\n    }\n  },\n  setup(props) {\n    const maxGenres = 3;\n    const maxMotivos = props.viewMode === 'grid' ? 2 : 3;\n\n    // Compute limited genres to display\n    const limitedGenres = computed(() => {\n      const genres = [];\n      if (props.recommendation.jikanInfo?.genres) {\n        genres.push(...props.recommendation.jikanInfo.genres);\n      }\n      if (props.recommendation.jikanInfo?.themes) {\n        genres.push(...props.recommendation.jikanInfo.themes);\n      }\n      return genres.slice(0, maxGenres);\n    });\n\n    // Check if there are more genres\n    const totalGenres = computed(() => {\n      let count = 0;\n      if (props.recommendation.jikanInfo?.genres) {\n        count += props.recommendation.jikanInfo.genres.length;\n      }\n      if (props.recommendation.jikanInfo?.themes) {\n        count += props.recommendation.jikanInfo.themes.length;\n      }\n      return count;\n    });\n    const hasMoreGenres = computed(() => {\n      return totalGenres.value > maxGenres;\n    });\n\n    // Compute limited motivos to display\n    const limitedMotivos = computed(() => {\n      if (!props.recommendation.motivos || !Array.isArray(props.recommendation.motivos)) {\n        return ['Sem motivos específicos mencionados'];\n      }\n      return props.recommendation.motivos.slice(0, maxMotivos);\n    });\n\n    // Check if there are more motivos\n    const hasMoreMotivos = computed(() => {\n      return props.recommendation.motivos && Array.isArray(props.recommendation.motivos) && props.recommendation.motivos.length > maxMotivos;\n    });\n\n    // Format numbers (e.g., 1000 -> 1K)\n    const formatNumber = num => {\n      if (!num) return '0';\n      if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M';\n      }\n      if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'K';\n      }\n      return num.toString();\n    };\n    return {\n      limitedGenres,\n      totalGenres,\n      hasMoreGenres,\n      limitedMotivos,\n      hasMoreMotivos,\n      maxGenres,\n      formatNumber\n    };\n  }\n};","map":{"version":3,"names":["computed","name","props","recommendation","type","Object","required","viewMode","String","default","setup","maxGenres","maxMotivos","limitedGenres","genres","jikanInfo","push","themes","slice","totalGenres","count","length","hasMoreGenres","value","limitedMotivos","motivos","Array","isArray","hasMoreMotivos","formatNumber","num","toFixed","toString"],"sources":["/home/geanwork/Documentos/Projetos/Pessoal/reddit-research/src/components/RecommendationCard.vue"],"sourcesContent":["<template>\n  <div \n    class=\"recommendation-item with-jikan\" \n    :class=\"{ 'list-item': viewMode === 'list' }\"\n    @click=\"$emit('show-details', recommendation)\"\n  >\n    <div class=\"recommendation-header\">\n      <div class=\"recommendation-image\">\n        <img \n          :src=\"recommendation.jikanInfo?.image_url || 'https://via.placeholder.com/225x350?text=No+Image'\" \n          :alt=\"recommendation.titulo\" \n          class=\"img-fluid\"\n        >\n      </div>\n      <div class=\"recommendation-title-info\">\n        <div class=\"recommendation-point\">{{ recommendation.jikanInfo?.title_english || recommendation.titulo }}</div>\n        <div class=\"recommendation-meta\">\n          {{ recommendation.jikanInfo?.type || 'Anime' }} \n          <span v-if=\"recommendation.jikanInfo?.episodes\">• {{ recommendation.jikanInfo.episodes }} episódios</span>\n          <span v-if=\"recommendation.jikanInfo?.year\">• {{ recommendation.jikanInfo.year }}</span>\n        </div>\n        <div class=\"recommendation-score\" v-if=\"recommendation.jikanInfo?.score\">\n          <i class=\"fas fa-star\"></i> {{ recommendation.jikanInfo.score }}\n          <span v-if=\"recommendation.jikanInfo?.scored_by\">\n            ({{ formatNumber(recommendation.jikanInfo.scored_by) }} avaliações)\n          </span>\n        </div>\n        <div class=\"recommendation-genres\">\n          <span \n            v-for=\"(genre, index) in limitedGenres\" \n            :key=\"index\" \n            class=\"badge bg-primary me-1 mb-1\"\n          >\n            {{ genre }}\n          </span>\n          <span v-if=\"hasMoreGenres\" class=\"badge bg-secondary me-1 mb-1\">+{{ totalGenres - maxGenres }}</span>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"recommendation-explanation\">\n      <div class=\"motivos-title\">Por que os usuários recomendam:</div>\n      <ul class=\"motivos-list\">\n        <li v-for=\"(motivo, index) in limitedMotivos\" :key=\"index\">{{ motivo }}</li>\n        <li v-if=\"hasMoreMotivos\" class=\"text-primary\">\n          <em>Clique para ver mais motivos...</em>\n        </li>\n      </ul>\n      <div class=\"recommendation-actions mt-2\">\n        <button class=\"btn btn-sm btn-outline-primary\" @click.stop=\"$emit('show-details', recommendation)\">\n          <i class=\"fas fa-info-circle\"></i> Detalhes\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { computed } from 'vue'\n\nexport default {\n  name: 'RecommendationCard',\n  props: {\n    recommendation: {\n      type: Object,\n      required: true\n    },\n    viewMode: {\n      type: String,\n      default: 'grid'\n    }\n  },\n  setup(props) {\n    const maxGenres = 3\n    const maxMotivos = props.viewMode === 'grid' ? 2 : 3\n    \n    // Compute limited genres to display\n    const limitedGenres = computed(() => {\n      const genres = []\n      \n      if (props.recommendation.jikanInfo?.genres) {\n        genres.push(...props.recommendation.jikanInfo.genres)\n      }\n      \n      if (props.recommendation.jikanInfo?.themes) {\n        genres.push(...props.recommendation.jikanInfo.themes)\n      }\n      \n      return genres.slice(0, maxGenres)\n    })\n    \n    // Check if there are more genres\n    const totalGenres = computed(() => {\n      let count = 0\n      \n      if (props.recommendation.jikanInfo?.genres) {\n        count += props.recommendation.jikanInfo.genres.length\n      }\n      \n      if (props.recommendation.jikanInfo?.themes) {\n        count += props.recommendation.jikanInfo.themes.length\n      }\n      \n      return count\n    })\n    \n    const hasMoreGenres = computed(() => {\n      return totalGenres.value > maxGenres\n    })\n    \n    // Compute limited motivos to display\n    const limitedMotivos = computed(() => {\n      if (!props.recommendation.motivos || !Array.isArray(props.recommendation.motivos)) {\n        return ['Sem motivos específicos mencionados']\n      }\n      \n      return props.recommendation.motivos.slice(0, maxMotivos)\n    })\n    \n    // Check if there are more motivos\n    const hasMoreMotivos = computed(() => {\n      return props.recommendation.motivos && \n             Array.isArray(props.recommendation.motivos) && \n             props.recommendation.motivos.length > maxMotivos\n    })\n    \n    // Format numbers (e.g., 1000 -> 1K)\n    const formatNumber = (num) => {\n      if (!num) return '0'\n      if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M'\n      }\n      if (num >= 1000) {\n        return (num / 1000).toFixed(1) + 'K'\n      }\n      return num.toString()\n    }\n    \n    return {\n      limitedGenres,\n      totalGenres,\n      hasMoreGenres,\n      limitedMotivos,\n      hasMoreMotivos,\n      maxGenres,\n      formatNumber\n    }\n  }\n}\n</script>\n\n<style scoped>\n.recommendation-item {\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border-radius: 10px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n  animation: fadeInUp 0.5s ease-out;\n  animation-fill-mode: both;\n}\n\n.recommendation-item:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 10px 25px rgba(0,0,0,0.15);\n}\n\n.recommendation-header {\n  background-color: #212529;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n}\n\n.recommendation-image {\n  height: 200px;\n  width: 100%;\n  overflow: hidden;\n}\n\n.recommendation-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n}\n\n.recommendation-title-info {\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n}\n\n.recommendation-point {\n  font-weight: 700;\n  font-size: 18px;\n  margin-bottom: 5px;\n  color: #fff;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.recommendation-meta {\n  font-size: 14px;\n  color: #ced4da;\n  margin-bottom: 10px;\n}\n\n.recommendation-score {\n  font-size: 16px;\n  color: #ffc107;\n  margin-bottom: 10px;\n}\n\n.recommendation-score i {\n  margin-right: 5px;\n}\n\n.recommendation-genres {\n  margin-bottom: 10px;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.recommendation-explanation {\n  padding: 15px;\n  background-color: #f8f9fa;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.motivos-title {\n  font-weight: 600;\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: #495057;\n}\n\n.motivos-list {\n  padding-left: 20px;\n  margin-top: 0;\n  margin-bottom: 0;\n  flex: 1;\n}\n\n.motivos-list li {\n  margin-bottom: 8px;\n  line-height: 1.5;\n}\n\n.motivos-list li:last-child {\n  margin-bottom: 0;\n}\n\n/* List view styles */\n.recommendation-item.list-item {\n  flex-direction: row;\n  max-height: 250px;\n}\n\n.recommendation-item.list-item .recommendation-header {\n  flex-direction: row;\n  width: 60%;\n  border-radius: 10px 0 0 10px;\n}\n\n.recommendation-item.list-item .recommendation-image {\n  flex: 0 0 150px;\n  max-width: 150px;\n  height: 100%;\n}\n\n.recommendation-item.list-item .recommendation-explanation {\n  flex: 0 0 40%;\n  max-width: 40%;\n  border-radius: 0 10px 10px 0;\n  height: 100%;\n  overflow-y: auto;\n}\n\n/* Animation */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Responsive styles */\n@media (max-width: 992px) {\n  .recommendation-item.list-item {\n    flex-direction: column;\n    max-height: none;\n  }\n  \n  .recommendation-item.list-item .recommendation-header {\n    width: 100%;\n    border-radius: 10px 10px 0 0;\n  }\n  \n  .recommendation-item.list-item .recommendation-explanation {\n    max-width: 100%;\n    border-radius: 0 0 10px 10px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}