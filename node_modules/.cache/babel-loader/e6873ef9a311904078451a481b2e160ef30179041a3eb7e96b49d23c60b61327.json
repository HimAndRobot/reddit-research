{"ast":null,"code":"import { ref, reactive, computed, onMounted, onClickOutside, onBeforeUnmount } from 'vue';\nimport { useRouter } from 'vue-router';\nimport RecommendationCard from '@/components/RecommendationCard.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  components: {\n    RecommendationCard\n  },\n  setup() {\n    const router = useRouter();\n\n    // Form data\n    const topic = ref('');\n    const subreddit = ref('');\n    const language = ref('pt');\n    const subreddits = ref(['anime', 'manga', 'LightNovels', 'books', 'suggestmeabook', 'MovieSuggestions', 'televisionsuggestions', 'ifyoulikeblank', 'gamesuggestions', 'gamingsuggestions']);\n\n    // Languages with icons\n    const languages = reactive({\n      pt: {\n        name: 'Português',\n        icon: 'flag-icon flag-icon-br'\n      },\n      en: {\n        name: 'English',\n        icon: 'flag-icon flag-icon-us'\n      },\n      es: {\n        name: 'Español',\n        icon: 'flag-icon flag-icon-es'\n      },\n      fr: {\n        name: 'Français',\n        icon: 'flag-icon flag-icon-fr'\n      },\n      ja: {\n        name: '日本語',\n        icon: 'flag-icon flag-icon-jp'\n      }\n    });\n\n    // UI state\n    const isLoading = ref(false);\n    const showResults = ref(false);\n    const showGenreFilter = ref(false);\n    const showSubredditMenu = ref(false);\n    const showLanguageMenu = ref(false);\n    const selectedGenres = ref([]);\n    const viewMode = ref('grid');\n    const selectedRecommendation = ref(null);\n    const statusMessage = ref('Analisando discussões do Reddit');\n    const statusProgress = ref(0);\n    const statusDetail = ref('Isso pode levar alguns segundos');\n\n    // Data\n    const recommendations = ref([]);\n    const genres = computed(() => {\n      const allGenres = new Set();\n      recommendations.value.forEach(rec => {\n        if (rec.jikanInfo?.genres && Array.isArray(rec.jikanInfo.genres)) {\n          rec.jikanInfo.genres.forEach(genre => allGenres.add(genre));\n        }\n      });\n      return [...allGenres].sort();\n    });\n\n    // Computed properties\n    const filteredRecommendations = computed(() => {\n      if (selectedGenres.value.length === 0) {\n        return recommendations.value;\n      }\n      return recommendations.value.filter(rec => {\n        if (!rec.jikanInfo?.genres || !Array.isArray(rec.jikanInfo.genres)) return false;\n        return selectedGenres.value.some(genre => rec.jikanInfo.genres.includes(genre));\n      });\n    });\n    const languageIcon = computed(() => {\n      return languages[language.value]?.icon || 'fas fa-globe';\n    });\n\n    // Load subreddits on mount\n    onMounted(() => {\n      // Carregar subreddits da API\n      axios.get('/api/subreddits').then(response => {\n        if (response.data && response.data.subreddits) {\n          subreddits.value = response.data.subreddits;\n        }\n      }).catch(error => {\n        console.error('Erro ao carregar subreddits:', error);\n      });\n\n      // Close dropdowns when clicking outside\n      document.addEventListener('click', e => {\n        if (!e.target.closest('.dropdown-container')) {\n          showSubredditMenu.value = false;\n          showLanguageMenu.value = false;\n          showGenreFilter.value = false;\n        }\n      });\n\n      // Conectar ao SSE para atualizações de status em tempo real\n      connectToSSE();\n    });\n\n    // Limpar conexões ao desmontar o componente\n    onBeforeUnmount(() => {\n      disconnectSSE();\n    });\n\n    // Variável para armazenar a conexão SSE\n    let eventSource = null;\n\n    // Conectar ao SSE\n    const connectToSSE = () => {\n      // Fechar conexão existente se houver\n      disconnectSSE();\n\n      // Criar nova conexão\n      eventSource = new EventSource('/api/status-updates');\n\n      // Evento de conexão estabelecida\n      eventSource.onopen = () => {\n        console.log('Conexão SSE estabelecida');\n      };\n\n      // Evento de mensagem recebida\n      eventSource.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('Atualização de status recebida:', data);\n\n          // Processar atualizações de status\n          if (data.type === 'status') {\n            statusMessage.value = data.message || 'Processando...';\n            statusProgress.value = data.progress || 0;\n\n            // Definir detalhes com base no status\n            switch (data.status) {\n              case 'iniciando':\n                statusDetail.value = 'Preparando para buscar dados...';\n                break;\n              case 'otimizando':\n                statusDetail.value = 'Otimizando sua busca para melhores resultados...';\n                break;\n              case 'buscando':\n              case 'buscando_posts':\n                statusDetail.value = 'Buscando discussões relevantes no Reddit...';\n                break;\n              case 'coletando_comentarios':\n                statusDetail.value = 'Coletando comentários dos usuários...';\n                break;\n              case 'agregando':\n                statusDetail.value = 'Organizando os comentários para análise...';\n                break;\n              case 'analisando':\n              case 'analisando_ia':\n                statusDetail.value = 'A IA está analisando os comentários para encontrar recomendações...';\n                break;\n              case 'enriquecendo':\n                statusDetail.value = 'Buscando informações adicionais sobre as recomendações...';\n                break;\n              case 'concluido':\n                statusDetail.value = 'Processamento finalizado com sucesso!';\n                break;\n              case 'erro':\n                statusDetail.value = 'Ocorreu um erro durante o processamento.';\n                break;\n              default:\n                statusDetail.value = 'Processando sua solicitação...';\n            }\n          }\n        } catch (error) {\n          console.error('Erro ao processar atualização de status:', error);\n        }\n      };\n\n      // Evento de erro\n      eventSource.onerror = error => {\n        console.error('Erro na conexão SSE:', error);\n        disconnectSSE();\n      };\n    };\n\n    // Desconectar do SSE\n    const disconnectSSE = () => {\n      if (eventSource) {\n        eventSource.close();\n        eventSource = null;\n        console.log('Conexão SSE fechada');\n      }\n    };\n\n    // Search Reddit\n    const searchReddit = async () => {\n      if (!topic.value || !subreddit.value) return;\n      isLoading.value = true;\n      showResults.value = false;\n\n      // Resetar status\n      statusMessage.value = 'Iniciando busca...';\n      statusProgress.value = 5;\n      statusDetail.value = 'Preparando para buscar recomendações...';\n      try {\n        // Fazer chamada para a API\n        const response = await axios.post(`/api/search-and-summarize`, {\n          topic: topic.value,\n          subreddit: subreddit.value,\n          language: language.value\n        });\n        if (response.data && response.data.summary && response.data.summary.recomendacoes) {\n          recommendations.value = response.data.summary.recomendacoes;\n          showResults.value = true;\n\n          // Scroll to results after a short delay to allow for animation\n          setTimeout(() => {\n            window.scrollTo({\n              top: document.querySelector('.min-h-screen').offsetHeight,\n              behavior: 'smooth'\n            });\n          }, 300);\n        } else if (response.status === 404 || response.data && response.data.error) {\n          alert(`Não foram encontradas recomendações para \"${topic.value}\" em r/${subreddit.value}. Por favor, tente outro tópico ou subreddit.`);\n          recommendations.value = [];\n          showResults.value = false;\n        } else {\n          alert('Não foram encontradas recomendações para esta busca. Tente outro tópico ou subreddit.');\n          recommendations.value = [];\n          showResults.value = false;\n        }\n      } catch (error) {\n        console.error('Error searching Reddit:', error);\n        if (error.response && error.response.status === 404) {\n          alert(`Não foram encontradas recomendações para \"${topic.value}\" em r/${subreddit.value}. Por favor, tente outro tópico ou subreddit.`);\n        } else {\n          alert('Ocorreu um erro ao buscar recomendações. Por favor, tente novamente.');\n        }\n        recommendations.value = [];\n        showResults.value = false;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Toggle dropdowns\n    const toggleGenreFilter = e => {\n      e.stopPropagation();\n      showGenreFilter.value = !showGenreFilter.value;\n      showSubredditMenu.value = false;\n      showLanguageMenu.value = false;\n    };\n    const toggleSubredditMenu = e => {\n      e.stopPropagation();\n      showSubredditMenu.value = !showSubredditMenu.value;\n      showGenreFilter.value = false;\n      showLanguageMenu.value = false;\n    };\n    const toggleLanguageMenu = e => {\n      e.stopPropagation();\n      showLanguageMenu.value = !showLanguageMenu.value;\n      showGenreFilter.value = false;\n      showSubredditMenu.value = false;\n    };\n\n    // Select options\n    const selectSubreddit = sub => {\n      subreddit.value = sub;\n      showSubredditMenu.value = false;\n    };\n    const selectLanguage = code => {\n      language.value = code;\n      showLanguageMenu.value = false;\n    };\n\n    // Toggle genre selection\n    const toggleGenre = genre => {\n      const index = selectedGenres.value.indexOf(genre);\n      if (index === -1) {\n        selectedGenres.value.push(genre);\n      } else {\n        selectedGenres.value.splice(index, 1);\n      }\n    };\n\n    // Clear genre filters\n    const clearGenreFilters = () => {\n      selectedGenres.value = [];\n      showGenreFilter.value = false;\n    };\n\n    // Apply filters\n    const applyFilters = () => {\n      showGenreFilter.value = false;\n    };\n\n    // Set view mode\n    const setViewMode = mode => {\n      viewMode.value = mode;\n    };\n\n    // Go to debug page\n    const goToDebug = () => {\n      // Salvar dados para debug\n      const debugData = {\n        topic: topic.value,\n        subreddit: subreddit.value,\n        language: language.value,\n        timestamp: new Date().toISOString(),\n        searchResults: [],\n        aggregatedText: '',\n        aiResponse: {\n          recomendacoes: recommendations.value\n        },\n        jikanData: recommendations.value\n      };\n      localStorage.setItem('debugData', JSON.stringify(debugData));\n      router.push('/debug');\n    };\n\n    // Show recommendation details\n    const showDetails = recommendation => {\n      selectedRecommendation.value = recommendation;\n    };\n\n    // Format number\n    const formatNumber = num => {\n      if (typeof num !== 'number') return num;\n      return num.toFixed(1);\n    };\n    return {\n      // Form data\n      topic,\n      subreddit,\n      language,\n      subreddits,\n      languages,\n      // UI state\n      isLoading,\n      showResults,\n      showGenreFilter,\n      showSubredditMenu,\n      showLanguageMenu,\n      selectedGenres,\n      viewMode,\n      selectedRecommendation,\n      statusMessage,\n      statusProgress,\n      statusDetail,\n      // Data\n      recommendations,\n      genres,\n      filteredRecommendations,\n      languageIcon,\n      // Methods\n      searchReddit,\n      toggleGenreFilter,\n      toggleSubredditMenu,\n      toggleLanguageMenu,\n      selectSubreddit,\n      selectLanguage,\n      toggleGenre,\n      clearGenreFilters,\n      applyFilters,\n      setViewMode,\n      goToDebug,\n      showDetails,\n      formatNumber\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","onClickOutside","onBeforeUnmount","useRouter","RecommendationCard","axios","name","components","setup","router","topic","subreddit","language","subreddits","languages","pt","icon","en","es","fr","ja","isLoading","showResults","showGenreFilter","showSubredditMenu","showLanguageMenu","selectedGenres","viewMode","selectedRecommendation","statusMessage","statusProgress","statusDetail","recommendations","genres","allGenres","Set","value","forEach","rec","jikanInfo","Array","isArray","genre","add","sort","filteredRecommendations","length","filter","some","includes","languageIcon","get","then","response","data","catch","error","console","document","addEventListener","e","target","closest","connectToSSE","disconnectSSE","eventSource","EventSource","onopen","log","onmessage","event","JSON","parse","type","message","progress","status","onerror","close","searchReddit","post","summary","recomendacoes","setTimeout","window","scrollTo","top","querySelector","offsetHeight","behavior","alert","toggleGenreFilter","stopPropagation","toggleSubredditMenu","toggleLanguageMenu","selectSubreddit","sub","selectLanguage","code","toggleGenre","index","indexOf","push","splice","clearGenreFilters","applyFilters","setViewMode","mode","goToDebug","debugData","timestamp","Date","toISOString","searchResults","aggregatedText","aiResponse","jikanData","localStorage","setItem","stringify","showDetails","recommendation","formatNumber","num","toFixed"],"sources":["/home/geanwork/Documentos/Projetos/Pessoal/reddit-research/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col\">\n    <!-- Hero Section com Background -->\n    <div class=\"flex-1 bg-cover bg-center relative\" style=\"background-image: url('/images/anime-collage-bg.jpg')\">\n      <div class=\"absolute inset-0 bg-gradient-to-b from-black/70 via-black/50 to-black/70\"></div>\n      \n      <div class=\"container mx-auto px-4 py-16 relative z-10 flex flex-col items-center justify-center min-h-screen\">\n        <div class=\"max-w-3xl mx-auto text-center mb-12\">\n          <h1 class=\"text-5xl md:text-6xl font-bold mb-4 text-white animate-fade-in\">RecommendIt</h1>\n          <p class=\"text-xl md:text-2xl text-white/80 animate-fade-in animation-delay-200\">\n            Descubra novas recomendações baseadas nas discussões do Reddit\n          </p>\n        </div>\n        \n        <!-- Search Form -->\n        <div class=\"w-full max-w-2xl mx-auto animate-fade-in animation-delay-400\">\n          <form @submit.prevent=\"searchReddit\" class=\"space-y-6\">\n            <div class=\"relative\">\n              <div class=\"flex items-center bg-white/10 backdrop-blur-md rounded-full overflow-hidden border border-white/20 shadow-xl hover:shadow-2xl transition-all duration-300 hover:border-white/30\">\n                <div class=\"flex-shrink-0 pl-5\">\n                  <i class=\"fas fa-search text-white/70\"></i>\n                </div>\n                <input \n                  type=\"text\" \n                  id=\"topic\" \n                  v-model=\"topic\" \n                  placeholder=\"O que você está procurando?\" \n                  class=\"w-full px-4 py-4 bg-transparent border-none text-white placeholder-white/70 focus:outline-none text-lg\"\n                  required\n                >\n                <div class=\"flex-shrink-0 border-l border-white/20 px-4 py-4 cursor-pointer\" @click=\"toggleSubredditMenu\">\n                  <div class=\"flex items-center text-white/80 hover:text-white\">\n                    <span class=\"mr-2\">r/{{ subreddit || 'Selecione' }}</span>\n                    <i class=\"fas fa-chevron-down text-xs\"></i>\n                  </div>\n                </div>\n                <div class=\"flex-shrink-0 border-l border-white/20 px-4 py-4 cursor-pointer\" @click=\"toggleLanguageMenu\">\n                  <div class=\"flex items-center text-white/80 hover:text-white\">\n                    <i :class=\"languageIcon\" class=\"mr-2\"></i>\n                    <i class=\"fas fa-chevron-down text-xs\"></i>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Subreddit Dropdown -->\n              <div \n                v-if=\"showSubredditMenu\" \n                class=\"absolute left-0 right-0 mt-2 bg-white/10 backdrop-blur-md rounded-xl shadow-xl border border-white/20 z-20 max-h-60 overflow-y-auto animate-fade-in-down\"\n              >\n                <div class=\"p-2\">\n                  <div \n                    v-for=\"sub in subreddits\" \n                    :key=\"sub\" \n                    @click=\"selectSubreddit(sub)\"\n                    class=\"px-4 py-2 rounded-lg text-white hover:bg-white/20 cursor-pointer transition-colors\"\n                    :class=\"subreddit === sub ? 'bg-white/20' : ''\"\n                  >\n                    r/{{ sub }}\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Language Dropdown -->\n              <div \n                v-if=\"showLanguageMenu\" \n                class=\"absolute right-0 mt-2 bg-white/10 backdrop-blur-md rounded-xl shadow-xl border border-white/20 z-20 animate-fade-in-down\"\n                style=\"min-width: 180px\"\n              >\n                <div class=\"p-2\">\n                  <div \n                    v-for=\"(lang, code) in languages\" \n                    :key=\"code\" \n                    @click=\"selectLanguage(code)\"\n                    class=\"px-4 py-2 rounded-lg text-white hover:bg-white/20 cursor-pointer transition-colors flex items-center\"\n                    :class=\"language === code ? 'bg-white/20' : ''\"\n                  >\n                    <i :class=\"lang.icon\" class=\"mr-3\"></i>\n                    <span>{{ lang.name }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <button \n                type=\"submit\" \n                class=\"w-full px-6 py-4 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-medium rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center\"\n                :disabled=\"isLoading\"\n              >\n                <span v-if=\"!isLoading\" class=\"flex items-center\">\n                  <i class=\"fas fa-search mr-2\"></i>\n                  Buscar Recomendações\n                </span>\n                <span v-else class=\"flex items-center\">\n                  <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Processando...\n                </span>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Loading Indicator -->\n    <div v-if=\"isLoading\" class=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n      <div class=\"bg-white/10 backdrop-blur-md rounded-xl p-8 max-w-md w-full text-center\">\n        <div class=\"inline-block animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-600 mb-6\"></div>\n        <p class=\"text-xl text-white font-medium mb-2\">{{ statusMessage }}</p>\n        <div class=\"w-full bg-gray-700 rounded-full h-2.5 mb-4\">\n          <div class=\"bg-blue-600 h-2.5 rounded-full\" :style=\"{ width: `${statusProgress}%` }\"></div>\n        </div>\n        <p class=\"text-white/70\">{{ statusDetail }}</p>\n      </div>\n    </div>\n    \n    <!-- Results Section -->\n    <div v-if=\"showResults\" class=\"min-h-screen bg-gray-900 py-12 animate-fade-in\">\n      <div class=\"container mx-auto px-4\">\n        <div class=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-8\">\n          <div>\n            <h2 class=\"text-3xl font-bold text-white mb-2\">\n              Recomendações para você\n            </h2>\n            <p class=\"text-gray-400\">\n              <span class=\"font-medium\">Idioma:</span> \n              <span>{{ languages[language]?.name || language }}</span>\n            </p>\n          </div>\n          \n          <div class=\"flex flex-wrap gap-3 mt-4 md:mt-0\">\n            <!-- Filter by Genre -->\n            <div class=\"relative\">\n              <button \n                @click=\"toggleGenreFilter\" \n                class=\"px-4 py-2 bg-gray-800 hover:bg-gray-700 border border-gray-700 rounded-full text-gray-300 flex items-center transition-colors\"\n              >\n                <i class=\"fas fa-filter mr-2\"></i> Filtrar por Gênero\n                <i class=\"fas fa-chevron-down ml-2 text-xs\"></i>\n              </button>\n              \n              <div \n                v-if=\"showGenreFilter\" \n                class=\"absolute right-0 mt-2 w-72 bg-gray-800 rounded-xl shadow-xl z-10 p-4 border border-gray-700 animate-fade-in-down\"\n              >\n                <div class=\"mb-3 pb-3 border-b border-gray-700\">\n                  <div class=\"text-sm font-medium text-gray-300 mb-2\">Gêneros</div>\n                  <div class=\"flex flex-wrap gap-2\">\n                    <button \n                      v-for=\"genre in genres\" \n                      :key=\"genre\"\n                      @click=\"toggleGenre(genre)\"\n                      class=\"px-3 py-1 text-xs rounded-full mb-1 transition-colors\"\n                      :class=\"selectedGenres.includes(genre) ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\"\n                    >\n                      {{ genre }}\n                    </button>\n                  </div>\n                </div>\n                <div class=\"flex justify-between\">\n                  <button \n                    @click=\"clearGenreFilters\" \n                    class=\"text-xs text-gray-400 hover:text-gray-200\"\n                  >\n                    Limpar filtros\n                  </button>\n                  <button \n                    @click=\"applyFilters\" \n                    class=\"text-xs text-blue-400 hover:text-blue-300\"\n                  >\n                    Aplicar\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <!-- View Mode Toggle -->\n            <div class=\"flex rounded-full overflow-hidden border border-gray-700 bg-gray-800\">\n              <button \n                @click=\"setViewMode('grid')\" \n                class=\"px-3 py-2 flex items-center justify-center transition-colors\"\n                :class=\"viewMode === 'grid' ? 'bg-blue-600 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700'\"\n              >\n                <i class=\"fas fa-th-large\"></i>\n              </button>\n              <button \n                @click=\"setViewMode('list')\" \n                class=\"px-3 py-2 flex items-center justify-center transition-colors\"\n                :class=\"viewMode === 'list' ? 'bg-blue-600 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700'\"\n              >\n                <i class=\"fas fa-list\"></i>\n              </button>\n            </div>\n            \n            <!-- Debug Mode Button -->\n            <button \n              @click=\"goToDebug\" \n              class=\"px-4 py-2 bg-gray-800 hover:bg-gray-700 border border-gray-700 rounded-full text-gray-300 flex items-center transition-colors\"\n            >\n              <i class=\"fas fa-bug mr-2\"></i> Modo Debug\n            </button>\n          </div>\n        </div>\n        \n        <!-- Recommendations Grid/List -->\n        <div \n          :class=\"{ \n            'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6': viewMode === 'grid',\n            'space-y-4': viewMode === 'list'\n          }\"\n          class=\"animate-fade-in\"\n        >\n          <div v-if=\"filteredRecommendations.length === 0\" class=\"col-span-full py-16 text-center\">\n            <div class=\"inline-block p-6 rounded-full bg-gray-800 mb-6\">\n              <i class=\"fas fa-search text-4xl text-gray-500\"></i>\n            </div>\n            <p class=\"text-xl text-gray-400 mb-4\">Nenhuma recomendação encontrada com os filtros selecionados.</p>\n            <button \n              @click=\"clearGenreFilters\" \n              class=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-full text-white transition-colors\"\n            >\n              Limpar filtros\n            </button>\n          </div>\n          \n          <recommendation-card \n            v-for=\"(recommendation, index) in filteredRecommendations\" \n            :key=\"recommendation.id || recommendation.titulo\" \n            :recommendation=\"recommendation\"\n            :view-mode=\"viewMode\"\n            :animation-delay=\"index * 100\"\n            @click=\"showDetails(recommendation)\"\n            class=\"cursor-pointer\"\n          />\n        </div>\n      </div>\n    </div>\n    \n    <!-- Modal for Recommendation Details -->\n    <div v-if=\"selectedRecommendation\" class=\"fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-fade-in\">\n      <div class=\"bg-gray-900 rounded-xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden flex flex-col border border-gray-800\">\n        <div class=\"p-4 border-b border-gray-800 flex justify-between items-center\">\n          <h3 class=\"text-xl font-bold text-white\">Detalhes da Recomendação</h3>\n          <button @click=\"selectedRecommendation = null\" class=\"text-gray-400 hover:text-white transition-colors\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"flex-1 overflow-y-auto p-6\">\n          <div class=\"flex flex-col md:flex-row gap-8\">\n            <!-- Image -->\n            <div class=\"w-full md:w-1/3 flex-shrink-0\">\n              <div class=\"bg-gray-800 rounded-xl overflow-hidden aspect-[3/4]\">\n                <img \n                  v-if=\"selectedRecommendation.jikanInfo?.image_url\" \n                  :src=\"selectedRecommendation.jikanInfo.image_url\" \n                  :alt=\"selectedRecommendation.titulo\"\n                  class=\"w-full h-full object-cover\"\n                />\n                <div v-else class=\"w-full h-full flex items-center justify-center\">\n                  <i class=\"fas fa-image text-gray-600 text-4xl\"></i>\n                </div>\n              </div>\n              \n              <div class=\"mt-6 space-y-3\">\n                <div v-if=\"selectedRecommendation.jikanInfo?.score\" class=\"flex items-center\">\n                  <span class=\"text-amber-400 font-bold text-2xl mr-2\">{{ formatNumber(selectedRecommendation.jikanInfo.score) }}</span>\n                  <div class=\"flex\">\n                    <i class=\"fas fa-star text-amber-400\"></i>\n                  </div>\n                </div>\n                \n                <div v-if=\"selectedRecommendation.jikanInfo?.type\" class=\"text-gray-400\">\n                  <span class=\"font-medium text-gray-300\">Tipo:</span> {{ selectedRecommendation.jikanInfo.type }}\n                </div>\n                \n                <div v-if=\"selectedRecommendation.jikanInfo?.episodes\" class=\"text-gray-400\">\n                  <span class=\"font-medium text-gray-300\">Episódios:</span> {{ selectedRecommendation.jikanInfo.episodes }}\n                </div>\n                \n                <div v-if=\"selectedRecommendation.jikanInfo?.year\" class=\"text-gray-400\">\n                  <span class=\"font-medium text-gray-300\">Ano:</span> {{ selectedRecommendation.jikanInfo.year }}\n                </div>\n              </div>\n            </div>\n            \n            <!-- Details -->\n            <div class=\"flex-1\">\n              <h2 class=\"text-2xl font-bold text-white mb-6\">{{ selectedRecommendation.titulo }}</h2>\n              \n              <div v-if=\"selectedRecommendation.jikanInfo?.synopsis\" class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-200 mb-2\">Sinopse</h4>\n                <p class=\"text-gray-400 leading-relaxed\">{{ selectedRecommendation.jikanInfo.synopsis }}</p>\n              </div>\n              \n              <div v-if=\"selectedRecommendation.jikanInfo?.genres && selectedRecommendation.jikanInfo.genres.length\" class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-200 mb-2\">Gêneros</h4>\n                <div class=\"flex flex-wrap gap-2\">\n                  <span \n                    v-for=\"(genero, index) in selectedRecommendation.jikanInfo.genres\" \n                    :key=\"index\"\n                    class=\"px-3 py-1 bg-gray-800 text-blue-400 rounded-full text-sm border border-gray-700\"\n                  >\n                    {{ genero }}\n                  </span>\n                </div>\n              </div>\n              \n              <div v-if=\"selectedRecommendation.motivos && selectedRecommendation.motivos.length\" class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-200 mb-2\">Por que recomendamos</h4>\n                <ul class=\"space-y-3\">\n                  <li v-for=\"(razao, index) in selectedRecommendation.motivos\" :key=\"index\" class=\"text-gray-400 flex\">\n                    <i class=\"fas fa-check-circle text-green-500 mr-3 mt-1 flex-shrink-0\"></i>\n                    <span>{{ razao }}</span>\n                  </li>\n                </ul>\n              </div>\n              \n              <div v-if=\"selectedRecommendation.recomendadoPor && selectedRecommendation.recomendadoPor.length\" class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-200 mb-2\">Recomendado por</h4>\n                <p class=\"text-gray-400\">\n                  Esta recomendação foi mencionada por {{ selectedRecommendation.recomendadoPor.length }} \n                  {{ selectedRecommendation.recomendadoPor.length === 1 ? 'usuário' : 'usuários' }} do Reddit.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"p-4 border-t border-gray-800 flex justify-end\">\n          <button \n            @click=\"selectedRecommendation = null\" \n            class=\"px-5 py-2 bg-gray-800 hover:bg-gray-700 text-gray-300 rounded-full transition-colors\"\n          >\n            Fechar\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Footer -->\n    <footer class=\"bg-gray-900 text-gray-400 py-6 border-t border-gray-800\">\n      <div class=\"container mx-auto px-4 text-center\">\n        <p class=\"text-sm\">© 2023 RecommendIt - Todos os direitos reservados</p>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, onClickOutside, onBeforeUnmount } from 'vue'\nimport { useRouter } from 'vue-router'\nimport RecommendationCard from '@/components/RecommendationCard.vue'\nimport axios from 'axios'\n\nexport default {\n  name: 'Home',\n  components: {\n    RecommendationCard\n  },\n  setup() {\n    const router = useRouter()\n    \n    // Form data\n    const topic = ref('')\n    const subreddit = ref('')\n    const language = ref('pt')\n    const subreddits = ref([\n      'anime', 'manga', 'LightNovels', 'books', 'suggestmeabook',\n      'MovieSuggestions', 'televisionsuggestions', 'ifyoulikeblank',\n      'gamesuggestions', 'gamingsuggestions'\n    ])\n    \n    // Languages with icons\n    const languages = reactive({\n      pt: { name: 'Português', icon: 'flag-icon flag-icon-br' },\n      en: { name: 'English', icon: 'flag-icon flag-icon-us' },\n      es: { name: 'Español', icon: 'flag-icon flag-icon-es' },\n      fr: { name: 'Français', icon: 'flag-icon flag-icon-fr' },\n      ja: { name: '日本語', icon: 'flag-icon flag-icon-jp' }\n    })\n    \n    // UI state\n    const isLoading = ref(false)\n    const showResults = ref(false)\n    const showGenreFilter = ref(false)\n    const showSubredditMenu = ref(false)\n    const showLanguageMenu = ref(false)\n    const selectedGenres = ref([])\n    const viewMode = ref('grid')\n    const selectedRecommendation = ref(null)\n    const statusMessage = ref('Analisando discussões do Reddit')\n    const statusProgress = ref(0)\n    const statusDetail = ref('Isso pode levar alguns segundos')\n    \n    // Data\n    const recommendations = ref([])\n    const genres = computed(() => {\n      const allGenres = new Set()\n      recommendations.value.forEach(rec => {\n        if (rec.jikanInfo?.genres && Array.isArray(rec.jikanInfo.genres)) {\n          rec.jikanInfo.genres.forEach(genre => allGenres.add(genre))\n        }\n      })\n      return [...allGenres].sort()\n    })\n    \n    // Computed properties\n    const filteredRecommendations = computed(() => {\n      if (selectedGenres.value.length === 0) {\n        return recommendations.value\n      }\n      \n      return recommendations.value.filter(rec => {\n        if (!rec.jikanInfo?.genres || !Array.isArray(rec.jikanInfo.genres)) return false\n        return selectedGenres.value.some(genre => rec.jikanInfo.genres.includes(genre))\n      })\n    })\n    \n    const languageIcon = computed(() => {\n      return languages[language.value]?.icon || 'fas fa-globe'\n    })\n    \n    // Load subreddits on mount\n    onMounted(() => {\n      // Carregar subreddits da API\n      axios.get('/api/subreddits')\n        .then(response => {\n          if (response.data && response.data.subreddits) {\n            subreddits.value = response.data.subreddits;\n          }\n        })\n        .catch(error => {\n          console.error('Erro ao carregar subreddits:', error);\n        });\n        \n      // Close dropdowns when clicking outside\n      document.addEventListener('click', (e) => {\n        if (!e.target.closest('.dropdown-container')) {\n          showSubredditMenu.value = false;\n          showLanguageMenu.value = false;\n          showGenreFilter.value = false;\n        }\n      });\n      \n      // Conectar ao SSE para atualizações de status em tempo real\n      connectToSSE();\n    });\n    \n    // Limpar conexões ao desmontar o componente\n    onBeforeUnmount(() => {\n      disconnectSSE();\n    });\n    \n    // Variável para armazenar a conexão SSE\n    let eventSource = null;\n    \n    // Conectar ao SSE\n    const connectToSSE = () => {\n      // Fechar conexão existente se houver\n      disconnectSSE();\n      \n      // Criar nova conexão\n      eventSource = new EventSource('/api/status-updates');\n      \n      // Evento de conexão estabelecida\n      eventSource.onopen = () => {\n        console.log('Conexão SSE estabelecida');\n      };\n      \n      // Evento de mensagem recebida\n      eventSource.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('Atualização de status recebida:', data);\n          \n          // Processar atualizações de status\n          if (data.type === 'status') {\n            statusMessage.value = data.message || 'Processando...';\n            statusProgress.value = data.progress || 0;\n            \n            // Definir detalhes com base no status\n            switch (data.status) {\n              case 'iniciando':\n                statusDetail.value = 'Preparando para buscar dados...';\n                break;\n              case 'otimizando':\n                statusDetail.value = 'Otimizando sua busca para melhores resultados...';\n                break;\n              case 'buscando':\n              case 'buscando_posts':\n                statusDetail.value = 'Buscando discussões relevantes no Reddit...';\n                break;\n              case 'coletando_comentarios':\n                statusDetail.value = 'Coletando comentários dos usuários...';\n                break;\n              case 'agregando':\n                statusDetail.value = 'Organizando os comentários para análise...';\n                break;\n              case 'analisando':\n              case 'analisando_ia':\n                statusDetail.value = 'A IA está analisando os comentários para encontrar recomendações...';\n                break;\n              case 'enriquecendo':\n                statusDetail.value = 'Buscando informações adicionais sobre as recomendações...';\n                break;\n              case 'concluido':\n                statusDetail.value = 'Processamento finalizado com sucesso!';\n                break;\n              case 'erro':\n                statusDetail.value = 'Ocorreu um erro durante o processamento.';\n                break;\n              default:\n                statusDetail.value = 'Processando sua solicitação...';\n            }\n          }\n        } catch (error) {\n          console.error('Erro ao processar atualização de status:', error);\n        }\n      };\n      \n      // Evento de erro\n      eventSource.onerror = (error) => {\n        console.error('Erro na conexão SSE:', error);\n        disconnectSSE();\n      };\n    };\n    \n    // Desconectar do SSE\n    const disconnectSSE = () => {\n      if (eventSource) {\n        eventSource.close();\n        eventSource = null;\n        console.log('Conexão SSE fechada');\n      }\n    };\n    \n    // Search Reddit\n    const searchReddit = async () => {\n      if (!topic.value || !subreddit.value) return\n      \n      isLoading.value = true\n      showResults.value = false\n      \n      // Resetar status\n      statusMessage.value = 'Iniciando busca...';\n      statusProgress.value = 5;\n      statusDetail.value = 'Preparando para buscar recomendações...';\n      \n      try {\n        // Fazer chamada para a API\n        const response = await axios.post(`/api/search-and-summarize`, {\n          topic: topic.value,\n          subreddit: subreddit.value,\n          language: language.value\n        });\n        \n        if (response.data && response.data.summary && response.data.summary.recomendacoes) {\n          recommendations.value = response.data.summary.recomendacoes;\n          showResults.value = true;\n          \n          // Scroll to results after a short delay to allow for animation\n          setTimeout(() => {\n            window.scrollTo({\n              top: document.querySelector('.min-h-screen').offsetHeight,\n              behavior: 'smooth'\n            });\n          }, 300);\n        } else if (response.status === 404 || (response.data && response.data.error)) {\n          alert(`Não foram encontradas recomendações para \"${topic.value}\" em r/${subreddit.value}. Por favor, tente outro tópico ou subreddit.`);\n          recommendations.value = [];\n          showResults.value = false;\n        } else {\n          alert('Não foram encontradas recomendações para esta busca. Tente outro tópico ou subreddit.');\n          recommendations.value = [];\n          showResults.value = false;\n        }\n      } catch (error) {\n        console.error('Error searching Reddit:', error)\n        if (error.response && error.response.status === 404) {\n          alert(`Não foram encontradas recomendações para \"${topic.value}\" em r/${subreddit.value}. Por favor, tente outro tópico ou subreddit.`);\n        } else {\n          alert('Ocorreu um erro ao buscar recomendações. Por favor, tente novamente.')\n        }\n        recommendations.value = [];\n        showResults.value = false;\n      } finally {\n        isLoading.value = false\n      }\n    }\n    \n    // Toggle dropdowns\n    const toggleGenreFilter = (e) => {\n      e.stopPropagation();\n      showGenreFilter.value = !showGenreFilter.value;\n      showSubredditMenu.value = false;\n      showLanguageMenu.value = false;\n    }\n    \n    const toggleSubredditMenu = (e) => {\n      e.stopPropagation();\n      showSubredditMenu.value = !showSubredditMenu.value;\n      showGenreFilter.value = false;\n      showLanguageMenu.value = false;\n    }\n    \n    const toggleLanguageMenu = (e) => {\n      e.stopPropagation();\n      showLanguageMenu.value = !showLanguageMenu.value;\n      showGenreFilter.value = false;\n      showSubredditMenu.value = false;\n    }\n    \n    // Select options\n    const selectSubreddit = (sub) => {\n      subreddit.value = sub;\n      showSubredditMenu.value = false;\n    }\n    \n    const selectLanguage = (code) => {\n      language.value = code;\n      showLanguageMenu.value = false;\n    }\n    \n    // Toggle genre selection\n    const toggleGenre = (genre) => {\n      const index = selectedGenres.value.indexOf(genre)\n      if (index === -1) {\n        selectedGenres.value.push(genre)\n      } else {\n        selectedGenres.value.splice(index, 1)\n      }\n    }\n    \n    // Clear genre filters\n    const clearGenreFilters = () => {\n      selectedGenres.value = []\n      showGenreFilter.value = false\n    }\n    \n    // Apply filters\n    const applyFilters = () => {\n      showGenreFilter.value = false\n    }\n\n    // Set view mode\n    const setViewMode = (mode) => {\n      viewMode.value = mode\n    }\n    \n    // Go to debug page\n    const goToDebug = () => {\n      // Salvar dados para debug\n      const debugData = {\n        topic: topic.value,\n        subreddit: subreddit.value,\n        language: language.value,\n        timestamp: new Date().toISOString(),\n        searchResults: [],\n        aggregatedText: '',\n        aiResponse: {\n          recomendacoes: recommendations.value\n        },\n        jikanData: recommendations.value\n      };\n      \n      localStorage.setItem('debugData', JSON.stringify(debugData));\n      router.push('/debug');\n    }\n    \n    // Show recommendation details\n    const showDetails = (recommendation) => {\n      selectedRecommendation.value = recommendation\n    }\n    \n    // Format number\n    const formatNumber = (num) => {\n      if (typeof num !== 'number') return num\n      return num.toFixed(1)\n    }\n    \n    return {\n      // Form data\n      topic,\n      subreddit,\n      language,\n      subreddits,\n      languages,\n      \n      // UI state\n      isLoading,\n      showResults,\n      showGenreFilter,\n      showSubredditMenu,\n      showLanguageMenu,\n      selectedGenres,\n      viewMode,\n      selectedRecommendation,\n      statusMessage,\n      statusProgress,\n      statusDetail,\n      \n      // Data\n      recommendations,\n      genres,\n      filteredRecommendations,\n      languageIcon,\n      \n      // Methods\n      searchReddit,\n      toggleGenreFilter,\n      toggleSubredditMenu,\n      toggleLanguageMenu,\n      selectSubreddit,\n      selectLanguage,\n      toggleGenre,\n      clearGenreFilters,\n      applyFilters,\n      setViewMode,\n      goToDebug,\n      showDetails,\n      formatNumber\n    }\n  }\n}\n</script>\n\n<style>\n/* Animações */\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes fadeInDown {\n  from { \n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to { \n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-fade-in {\n  animation: fadeIn 0.5s ease-out forwards;\n}\n\n.animate-fade-in-down {\n  animation: fadeInDown 0.3s ease-out forwards;\n}\n\n.animation-delay-200 {\n  animation-delay: 200ms;\n}\n\n.animation-delay-400 {\n  animation-delay: 400ms;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}