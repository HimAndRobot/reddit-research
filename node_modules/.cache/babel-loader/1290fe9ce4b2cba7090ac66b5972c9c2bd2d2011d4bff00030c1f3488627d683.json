{"ast":null,"code":"import { ref, reactive, computed, onMounted, onClickOutside, onBeforeUnmount } from 'vue';\nimport { useRouter } from 'vue-router';\nimport RecommendationCard from '@/components/RecommendationCard.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  components: {\n    RecommendationCard\n  },\n  setup() {\n    const router = useRouter();\n\n    // Form data\n    const topic = ref('');\n    const category = ref('anime');\n    const language = ref('pt');\n    const categories = ref(['anime', 'kdrama']);\n\n    // Mapeamento de categorias para nomes de exibição\n    const categoryDisplayNames = {\n      'anime': 'Anime & Manga',\n      'kdrama': 'K-Drama'\n    };\n\n    // Função para obter o nome de exibição da categoria\n    const getCategoryDisplayName = cat => {\n      return categoryDisplayNames[cat] || cat;\n    };\n\n    // Languages with icons\n    const languages = reactive({\n      pt: {\n        name: 'Português',\n        icon: 'flag-icon flag-icon-br'\n      },\n      en: {\n        name: 'English',\n        icon: 'flag-icon flag-icon-us'\n      },\n      es: {\n        name: 'Español',\n        icon: 'flag-icon flag-icon-es'\n      },\n      fr: {\n        name: 'Français',\n        icon: 'flag-icon flag-icon-fr'\n      },\n      ja: {\n        name: '日本語',\n        icon: 'flag-icon flag-icon-jp'\n      }\n    });\n\n    // UI state\n    const isLoading = ref(false);\n    const showResults = ref(false);\n    const showGenreFilter = ref(false);\n    const showCategoryMenu = ref(false);\n    const showLanguageMenu = ref(false);\n    const selectedGenres = ref([]);\n    const viewMode = ref('grid');\n    const selectedRecommendation = ref(null);\n    const statusMessage = ref('Analyzing Reddit discussions');\n    const statusProgress = ref(0);\n    const statusDetail = ref('This may take a few seconds');\n    const currentItem = ref(null);\n\n    // Data\n    const recommendations = ref([]);\n    const genres = computed(() => {\n      const allGenres = new Set();\n      recommendations.value.forEach(rec => {\n        if (rec.genres && Array.isArray(rec.genres)) {\n          rec.genres.forEach(genre => allGenres.add(genre));\n        }\n      });\n      return [...allGenres].sort();\n    });\n\n    // Computed properties\n    const filteredRecommendations = computed(() => {\n      if (selectedGenres.value.length === 0) {\n        return recommendations.value;\n      }\n      return recommendations.value.filter(rec => {\n        if (!rec.genres || !Array.isArray(rec.genres)) return false;\n        return selectedGenres.value.some(genre => rec.genres.includes(genre));\n      });\n    });\n    const languageIcon = computed(() => {\n      return languages[language.value]?.icon || 'fas fa-globe';\n    });\n\n    // Load categories on mount\n    onMounted(() => {\n      // Carregar categorias da API\n      axios.get('/api/categories').then(response => {\n        if (response.data && response.data.categories) {\n          categories.value = response.data.categories;\n        }\n      }).catch(error => {\n        console.error('Erro ao carregar categorias:', error);\n      });\n\n      // Close dropdowns when clicking outside\n      document.addEventListener('click', e => {\n        if (!e.target.closest('.dropdown-container')) {\n          showCategoryMenu.value = false;\n          showLanguageMenu.value = false;\n          showGenreFilter.value = false;\n        }\n      });\n\n      // Conectar ao SSE para atualizações de status em tempo real\n      connectToSSE();\n    });\n\n    // Limpar conexões ao desmontar o componente\n    onBeforeUnmount(() => {\n      disconnectSSE();\n    });\n\n    // Variável para armazenar a conexão SSE\n    let eventSource = null;\n\n    // Debug mode\n    const showDebugMode = ref(false);\n    const debugStatus = reactive({\n      reddit: 'waiting',\n      aggregate: 'waiting',\n      ai: 'waiting',\n      jikan: 'waiting'\n    });\n    const debugMessages = reactive({\n      reddit: 'Waiting for search to begin...',\n      aggregate: 'Waiting for comment aggregation...',\n      ai: 'Waiting for AI analysis...',\n      jikan: 'Waiting for data enrichment...'\n    });\n\n    // Conectar ao SSE\n    const connectToSSE = () => {\n      // Fechar conexão existente se houver\n      disconnectSSE();\n\n      // Criar nova conexão\n      eventSource = new EventSource('/api/status-updates');\n\n      // Evento de conexão estabelecida\n      eventSource.onopen = () => {\n        console.log('Conexão SSE estabelecida');\n      };\n\n      // Evento de mensagem recebida\n      eventSource.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('Atualização de status recebida:', data);\n\n          // Processar atualizações de status\n          if (data.type === 'status') {\n            statusMessage.value = data.message || 'Processando...';\n            statusProgress.value = data.progress || 0;\n\n            // Atualizar o item atual sendo processado\n            if (data.currentItem) {\n              currentItem.value = data.currentItem;\n            }\n\n            // Atualizar status de debug com base no status recebido\n            updateDebugStatus(data);\n\n            // Definir detalhes com base no status\n            switch (data.status) {\n              case 'iniciando':\n                statusDetail.value = 'Preparando para buscar dados...';\n                break;\n              case 'otimizando':\n                statusDetail.value = 'Otimizando sua busca para melhores resultados...';\n                debugStatus.reddit = 'active';\n                debugMessages.reddit = data.message;\n                break;\n              case 'buscando':\n              case 'buscando_posts':\n                statusDetail.value = 'Buscando discussões relevantes no Reddit...';\n                debugStatus.reddit = 'active';\n                debugMessages.reddit = data.message;\n                break;\n              case 'sem_posts':\n                statusDetail.value = 'Nenhum post encontrado para esta busca.';\n                debugStatus.reddit = 'completed';\n                debugMessages.reddit = data.message;\n                break;\n              case 'coletando_comentarios':\n                statusDetail.value = 'Coletando comentários dos usuários...';\n                debugStatus.reddit = 'active';\n                debugMessages.reddit = data.message;\n                break;\n              case 'comentarios_coletados':\n                statusDetail.value = 'Comentários coletados com sucesso.';\n                debugStatus.reddit = 'completed';\n                debugMessages.reddit = data.message;\n                debugStatus.aggregate = 'active';\n                debugMessages.aggregate = 'Iniciando agregação de comentários...';\n                break;\n              case 'agregando':\n              case 'agregando_comentarios':\n                statusDetail.value = 'Organizando os comentários para análise...';\n                debugStatus.aggregate = 'active';\n                debugMessages.aggregate = data.message;\n                break;\n              case 'analisando':\n              case 'analisando_ia':\n                statusDetail.value = 'A IA está analisando os comentários para encontrar recomendações...';\n                debugStatus.aggregate = 'completed';\n                debugMessages.aggregate = 'Agregação de comentários concluída.';\n                debugStatus.ai = 'active';\n                debugMessages.ai = data.message;\n                break;\n              case 'recomendacoes_identificadas':\n                statusDetail.value = 'Recomendações identificadas com sucesso.';\n                debugStatus.ai = 'completed';\n                debugMessages.ai = data.message;\n                break;\n              case 'enriquecendo':\n              case 'enriquecendo_dados':\n                statusDetail.value = 'Buscando informações adicionais sobre as recomendações...';\n                debugStatus.jikan = 'active';\n                debugMessages.jikan = data.message;\n                break;\n              case 'concluido':\n                statusDetail.value = 'Processamento finalizado com sucesso!';\n                debugStatus.jikan = 'completed';\n                debugMessages.jikan = 'Enriquecimento de dados concluído.';\n                break;\n              case 'erro':\n                statusDetail.value = 'Ocorreu um erro durante o processamento.';\n                // Marcar a etapa atual como erro\n                if (debugStatus.jikan === 'active') {\n                  debugStatus.jikan = 'error';\n                  debugMessages.jikan = data.message;\n                } else if (debugStatus.ai === 'active') {\n                  debugStatus.ai = 'error';\n                  debugMessages.ai = data.message;\n                } else if (debugStatus.aggregate === 'active') {\n                  debugStatus.aggregate = 'error';\n                  debugMessages.aggregate = data.message;\n                } else if (debugStatus.reddit === 'active') {\n                  debugStatus.reddit = 'error';\n                  debugMessages.reddit = data.message;\n                }\n                break;\n              default:\n                statusDetail.value = 'Processando sua solicitação...';\n            }\n          }\n        } catch (error) {\n          console.error('Erro ao processar atualização de status:', error);\n        }\n      };\n\n      // Evento de erro\n      eventSource.onerror = error => {\n        console.error('Erro na conexão SSE:', error);\n        disconnectSSE();\n      };\n    };\n\n    // Atualizar status de debug com base no status recebido\n    const updateDebugStatus = data => {\n      // Atualizar mensagens de debug com base no progresso\n      if (data.progress <= 30) {\n        // Fase de busca no Reddit\n        debugStatus.reddit = 'active';\n        debugMessages.reddit = data.message;\n      } else if (data.progress <= 50) {\n        // Fase de agregação\n        debugStatus.reddit = 'completed';\n        debugStatus.aggregate = 'active';\n        debugMessages.aggregate = data.message;\n      } else if (data.progress <= 85) {\n        // Fase de análise com IA\n        debugStatus.aggregate = 'completed';\n        debugStatus.ai = 'active';\n        debugMessages.ai = data.message;\n      } else if (data.progress < 100) {\n        // Fase de enriquecimento\n        debugStatus.ai = 'completed';\n        debugStatus.jikan = 'active';\n        debugMessages.jikan = data.message;\n      } else if (data.progress === 100) {\n        // Processo concluído\n        if (data.status === 'erro') {\n          // Marcar a etapa atual como erro\n          if (debugStatus.jikan === 'active') {\n            debugStatus.jikan = 'error';\n          } else if (debugStatus.ai === 'active') {\n            debugStatus.ai = 'error';\n          } else if (debugStatus.aggregate === 'active') {\n            debugStatus.aggregate = 'error';\n          } else if (debugStatus.reddit === 'active') {\n            debugStatus.reddit = 'error';\n          }\n        } else {\n          // Marcar todas as etapas como concluídas\n          debugStatus.reddit = 'completed';\n          debugStatus.aggregate = 'completed';\n          debugStatus.ai = 'completed';\n          debugStatus.jikan = 'completed';\n        }\n      }\n    };\n\n    // Desconectar do SSE\n    const disconnectSSE = () => {\n      if (eventSource) {\n        eventSource.close();\n        eventSource = null;\n        console.log('Conexão SSE fechada');\n      }\n    };\n\n    // Obter texto do status\n    const getStatusText = status => {\n      switch (status) {\n        case 'active':\n          return 'In progress';\n        case 'completed':\n          return 'Completed';\n        case 'error':\n          return 'Error';\n        default:\n          return 'Waiting';\n      }\n    };\n\n    // Toggle debug mode\n    const toggleDebugMode = () => {\n      showDebugMode.value = !showDebugMode.value;\n    };\n\n    // Go to debug page (agora apenas chama toggleDebugMode)\n    const goToDebug = () => {\n      toggleDebugMode();\n    };\n\n    // Search Reddit\n    const searchReddit = async () => {\n      if (!topic.value || !category.value) return;\n      statusMessage.value = '';\n      statusProgress.value = 0;\n      statusDetail.value = '';\n      currentItem.value = null;\n      isLoading.value = true;\n      showResults.value = false;\n\n      // Resetar status\n      statusMessage.value = 'Starting search...';\n      statusProgress.value = 5;\n      statusDetail.value = 'Preparing to find recommendations...';\n      try {\n        // Fazer chamada para a API\n        const response = await axios.post(`/api/search-and-summarize`, {\n          topic: topic.value,\n          category: category.value,\n          language: language.value\n        });\n        if (response.data && response.data.summary && response.data.summary.recommendations) {\n          recommendations.value = response.data.summary.recommendations.sort((a, b) => b.score - a.score);\n          showResults.value = true;\n\n          // Scroll to results after a short delay to allow for animation\n          setTimeout(() => {\n            window.scrollTo({\n              top: document.querySelector('.min-h-screen').offsetHeight,\n              behavior: 'smooth'\n            });\n          }, 300);\n        } else if (response.status === 404 || response.data && response.data.error) {\n          alert(`No recommendations found for \"${topic.value}\" in the ${getCategoryDisplayName(category.value)} category. Please try another topic or category.`);\n          recommendations.value = [];\n          showResults.value = false;\n        } else {\n          alert('No recommendations found for this search. Try another topic or category.');\n          recommendations.value = [];\n          showResults.value = false;\n        }\n      } catch (error) {\n        console.error('Error searching Reddit:', error);\n        if (error.response && error.response.status === 404) {\n          alert(`No recommendations found for \"${topic.value}\" in the ${getCategoryDisplayName(category.value)} category. Please try another topic or category.`);\n        } else {\n          alert('An error occurred while searching for recommendations. Please try again.');\n        }\n        recommendations.value = [];\n        showResults.value = false;\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    // Toggle dropdowns\n    const toggleGenreFilter = e => {\n      e.stopPropagation();\n      showGenreFilter.value = !showGenreFilter.value;\n      showCategoryMenu.value = false;\n      showLanguageMenu.value = false;\n    };\n    const toggleCategoryMenu = e => {\n      e.stopPropagation();\n      showCategoryMenu.value = !showCategoryMenu.value;\n      showGenreFilter.value = false;\n      showLanguageMenu.value = false;\n    };\n    const toggleLanguageMenu = e => {\n      e.stopPropagation();\n      showLanguageMenu.value = !showLanguageMenu.value;\n      showGenreFilter.value = false;\n      showCategoryMenu.value = false;\n    };\n\n    // Select options\n    const selectCategory = cat => {\n      category.value = cat;\n      showCategoryMenu.value = false;\n    };\n    const selectLanguage = code => {\n      language.value = code;\n      showLanguageMenu.value = false;\n    };\n\n    // Toggle genre selection\n    const toggleGenre = genre => {\n      const index = selectedGenres.value.indexOf(genre);\n      if (index === -1) {\n        selectedGenres.value.push(genre);\n      } else {\n        selectedGenres.value.splice(index, 1);\n      }\n    };\n\n    // Clear genre filters\n    const clearGenreFilters = () => {\n      selectedGenres.value = [];\n      showGenreFilter.value = false;\n    };\n\n    // Apply filters\n    const applyFilters = () => {\n      showGenreFilter.value = false;\n    };\n\n    // Set view mode\n    const setViewMode = mode => {\n      viewMode.value = mode;\n    };\n\n    // Show recommendation details\n    const showDetails = recommendation => {\n      selectedRecommendation.value = recommendation;\n    };\n\n    // Format number\n    const formatNumber = num => {\n      if (typeof num !== 'number') return num;\n      return num.toFixed(1);\n    };\n    return {\n      // Form data\n      topic,\n      category,\n      language,\n      categories,\n      languages,\n      // UI state\n      isLoading,\n      showResults,\n      showGenreFilter,\n      showCategoryMenu,\n      showLanguageMenu,\n      selectedGenres,\n      viewMode,\n      selectedRecommendation,\n      statusMessage,\n      statusProgress,\n      statusDetail,\n      currentItem,\n      // Data\n      recommendations,\n      genres,\n      filteredRecommendations,\n      languageIcon,\n      // Methods\n      searchReddit,\n      toggleGenreFilter,\n      toggleCategoryMenu,\n      toggleLanguageMenu,\n      selectCategory,\n      selectLanguage,\n      toggleGenre,\n      clearGenreFilters,\n      applyFilters,\n      setViewMode,\n      goToDebug,\n      showDetails,\n      formatNumber,\n      getCategoryDisplayName,\n      // Debug mode\n      showDebugMode,\n      debugStatus,\n      debugMessages,\n      toggleDebugMode,\n      getStatusText\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","onClickOutside","onBeforeUnmount","useRouter","RecommendationCard","axios","name","components","setup","router","topic","category","language","categories","categoryDisplayNames","getCategoryDisplayName","cat","languages","pt","icon","en","es","fr","ja","isLoading","showResults","showGenreFilter","showCategoryMenu","showLanguageMenu","selectedGenres","viewMode","selectedRecommendation","statusMessage","statusProgress","statusDetail","currentItem","recommendations","genres","allGenres","Set","value","forEach","rec","Array","isArray","genre","add","sort","filteredRecommendations","length","filter","some","includes","languageIcon","get","then","response","data","catch","error","console","document","addEventListener","e","target","closest","connectToSSE","disconnectSSE","eventSource","showDebugMode","debugStatus","reddit","aggregate","ai","jikan","debugMessages","EventSource","onopen","log","onmessage","event","JSON","parse","type","message","progress","updateDebugStatus","status","onerror","close","getStatusText","toggleDebugMode","goToDebug","searchReddit","post","summary","a","b","score","setTimeout","window","scrollTo","top","querySelector","offsetHeight","behavior","alert","toggleGenreFilter","stopPropagation","toggleCategoryMenu","toggleLanguageMenu","selectCategory","selectLanguage","code","toggleGenre","index","indexOf","push","splice","clearGenreFilters","applyFilters","setViewMode","mode","showDetails","recommendation","formatNumber","num","toFixed"],"sources":["/home/geanwork/Documentos/Projetos/Pessoal/reddit-research/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col\">\n    <!-- Hero Section com Background -->\n    <div class=\"flex-1 bg-cover bg-center relative\" style=\"background-image: url('/images/anime-collage-bg.jpg')\">\n      <div class=\"absolute inset-0 bg-gradient-to-b from-black/70 via-black/50 to-black/70\"></div>\n      \n      <div class=\"container mx-auto px-4 py-16 relative z-10 flex flex-col items-center justify-center min-h-screen\">\n        <div class=\"max-w-3xl mx-auto text-center mb-12\">\n          <h1 class=\"text-5xl md:text-6xl font-bold mb-4 text-white animate-fade-in\">RecommendIt</h1>\n          <p class=\"text-xl md:text-2xl text-white/80 animate-fade-in animation-delay-200\">\n            Discover new recommendations based on Reddit discussions\n          </p>\n        </div>\n        \n        <!-- Search Form -->\n        <div class=\"w-full max-w-2xl mx-auto animate-fade-in animation-delay-400\">\n          <form @submit.prevent=\"searchReddit\" class=\"space-y-6\">\n            <div class=\"relative\">\n              <div class=\"flex items-center bg-white/10 backdrop-blur-md rounded-full overflow-hidden border border-white/20 shadow-xl hover:shadow-2xl transition-all duration-300 hover:border-white/30\">\n                <div class=\"flex-shrink-0 pl-5\">\n                  <i class=\"fas fa-search text-white/70\"></i>\n                </div>\n                <input \n                  type=\"text\" \n                  id=\"topic\" \n                  v-model=\"topic\" \n                  placeholder=\"What are you looking for?\" \n                  class=\"w-full px-4 py-4 bg-transparent border-none text-white placeholder-white/70 focus:outline-none text-lg\"\n                  required\n                >\n                <div class=\"flex-shrink-0 border-l border-white/20 px-4 py-4 cursor-pointer\" @click=\"toggleCategoryMenu\">\n                  <div class=\"flex items-center text-white/80 hover:text-white\">\n                    <span class=\"mr-2\">{{ getCategoryDisplayName(category) }}</span>\n                    <i class=\"fas fa-chevron-down text-xs\"></i>\n                  </div>\n                </div>\n                <div class=\"flex-shrink-0 border-l border-white/20 px-4 py-4 cursor-pointer\" @click=\"toggleLanguageMenu\">\n                  <div class=\"flex items-center text-white/80 hover:text-white\">\n                    <i :class=\"languageIcon\" class=\"mr-2\"></i>\n                    <i class=\"fas fa-chevron-down text-xs\"></i>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Category Dropdown -->\n              <div \n                v-if=\"showCategoryMenu\" \n                class=\"absolute left-0 right-0 mt-2 bg-white/10 backdrop-blur-md rounded-xl shadow-xl border border-white/20 z-20 max-h-60 overflow-y-auto animate-fade-in-down\"\n              >\n                <div class=\"p-2\">\n                  <div \n                    v-for=\"cat in categories\" \n                    :key=\"cat\" \n                    @click=\"selectCategory(cat)\"\n                    class=\"px-4 py-2 rounded-lg text-white hover:bg-white/20 cursor-pointer transition-colors\"\n                    :class=\"category === cat ? 'bg-white/20' : ''\"\n                  >\n                    {{ getCategoryDisplayName(cat) }}\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Language Dropdown -->\n              <div \n                v-if=\"showLanguageMenu\" \n                class=\"absolute right-0 mt-2 bg-white/10 backdrop-blur-md rounded-xl shadow-xl border border-white/20 z-20 animate-fade-in-down\"\n                style=\"min-width: 180px\"\n              >\n                <div class=\"p-2\">\n                  <div \n                    v-for=\"(lang, code) in languages\" \n                    :key=\"code\" \n                    @click=\"selectLanguage(code)\"\n                    class=\"px-4 py-2 rounded-lg text-white hover:bg-white/20 cursor-pointer transition-colors flex items-center\"\n                    :class=\"language === code ? 'bg-white/20' : ''\"\n                  >\n                    <i :class=\"lang.icon\" class=\"mr-3\"></i>\n                    <span>{{ lang.name }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <button \n                type=\"submit\" \n                class=\"w-full px-6 py-4 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-medium rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center\"\n                :disabled=\"isLoading\"\n              >\n                <span v-if=\"!isLoading\" class=\"flex items-center\">\n                  <i class=\"fas fa-search mr-2\"></i>\n                  Search Recommendations\n                </span>\n                <span v-else class=\"flex items-center\">\n                  <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Processing...\n                </span>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Loading Indicator -->\n    <div v-if=\"isLoading\" class=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n      <div class=\"bg-white/10 backdrop-blur-md rounded-xl p-8 max-w-md w-full text-center\">\n        <div class=\"inline-block animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-600 mb-6\"></div>\n        <p class=\"text-xl text-white font-medium mb-2\">{{ statusMessage }}</p>\n        <div class=\"w-full bg-gray-700 rounded-full h-2.5 mb-4\">\n          <div class=\"bg-blue-600 h-2.5 rounded-full\" :style=\"{ width: `${statusProgress}%` }\"></div>\n        </div>\n        <p class=\"text-white/70 mb-4\">{{ statusDetail }}</p>\n        \n        <!-- Preview do item atual sendo processado -->\n        <div v-if=\"currentItem && currentItem.title\" class=\"mt-6 bg-black/30 rounded-lg p-4 flex items-center\">\n          <div class=\"w-16 h-20 bg-gray-800 rounded-md overflow-hidden flex-shrink-0 mr-4\">\n            <img v-if=\"currentItem.image\" :src=\"currentItem.image\" :alt=\"currentItem.title\" class=\"w-full h-full object-cover\">\n            <div v-else class=\"w-full h-full flex items-center justify-center\">\n              <i class=\"fas fa-image text-gray-600\"></i>\n            </div>\n          </div>\n          <div class=\"text-left\">\n            <p class=\"text-white font-medium\">{{ currentItem.title }}</p>\n            <p class=\"text-blue-400 text-sm\">\n              <i class=\"fas fa-search mr-1\"></i> Buscando informações\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Results Section -->\n    <div v-if=\"showResults\" class=\"min-h-screen bg-gray-900 py-12 animate-fade-in\">\n      <div class=\"container mx-auto px-4\">\n        <div class=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-8\">\n          <div>\n            <h2 class=\"text-3xl font-bold text-white mb-2\">\n              Recommendations for you\n            </h2>\n            <p class=\"text-gray-400\">\n              <span class=\"font-medium\">Category:</span> \n              <span>{{ getCategoryDisplayName(category) }}</span> | \n              <span class=\"font-medium\">Language:</span> \n              <span>{{ languages[language]?.name || language }}</span>\n            </p>\n          </div>\n          \n          <div class=\"flex flex-wrap gap-3 mt-4 md:mt-0\">\n            <!-- Filter by Genre -->\n            <div class=\"relative\">\n              <button \n                @click=\"toggleGenreFilter\" \n                class=\"px-4 py-2 bg-gray-800 hover:bg-gray-700 border border-gray-700 rounded-full text-gray-300 flex items-center transition-colors\"\n              >\n                <i class=\"fas fa-filter mr-2\"></i> Filter by Genre\n                <i class=\"fas fa-chevron-down ml-2 text-xs\"></i>\n              </button>\n              \n              <div \n                v-if=\"showGenreFilter\" \n                class=\"absolute right-0 mt-2 w-72 bg-gray-800 rounded-xl shadow-xl z-10 p-4 border border-gray-700 animate-fade-in-down\"\n              >\n                <div class=\"mb-3 pb-3 border-b border-gray-700\">\n                  <div class=\"text-sm font-medium text-gray-300 mb-2\">Genres</div>\n                  <div class=\"flex flex-wrap gap-2\">\n                    <button \n                      v-for=\"genre in genres\" \n                      :key=\"genre\"\n                      @click=\"toggleGenre(genre)\"\n                      class=\"px-3 py-1 text-xs rounded-full mb-1 transition-colors\"\n                      :class=\"selectedGenres.includes(genre) ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\"\n                    >\n                      {{ genre }}\n                    </button>\n                  </div>\n                </div>\n                <div class=\"flex justify-between\">\n                  <button \n                    @click=\"clearGenreFilters\" \n                    class=\"text-xs text-gray-400 hover:text-gray-200\"\n                  >\n                    Clear filters\n                  </button>\n                  <button \n                    @click=\"applyFilters\" \n                    class=\"text-xs text-blue-400 hover:text-blue-300\"\n                  >\n                    Apply\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <!-- View Mode Toggle -->\n            <div class=\"flex rounded-full overflow-hidden border border-gray-700 bg-gray-800\">\n              <button \n                @click=\"setViewMode('grid')\" \n                class=\"px-3 py-2 flex items-center justify-center transition-colors\"\n                :class=\"viewMode === 'grid' ? 'bg-blue-600 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700'\"\n              >\n                <i class=\"fas fa-th-large\"></i>\n              </button>\n              <button \n                @click=\"setViewMode('list')\" \n                class=\"px-3 py-2 flex items-center justify-center transition-colors\"\n                :class=\"viewMode === 'list' ? 'bg-blue-600 text-white' : 'bg-gray-800 text-gray-300 hover:bg-gray-700'\"\n              >\n                <i class=\"fas fa-list\"></i>\n              </button>\n            </div>\n            \n            <!-- Debug Mode Button -->\n            <button \n              @click=\"toggleDebugMode\" \n              class=\"px-4 py-2 bg-gray-800 hover:bg-gray-700 border border-gray-700 rounded-full text-gray-300 flex items-center transition-colors\"\n            >\n              <i class=\"fas fa-bug mr-2\"></i> {{ showDebugMode ? 'Hide Debug' : 'Debug Mode' }}\n            </button>\n          </div>\n        </div>\n        \n        <!-- Recommendations Grid/List -->\n        <div \n          :class=\"{ \n            'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6': viewMode === 'grid',\n            'space-y-4': viewMode === 'list'\n          }\"\n          class=\"animate-fade-in\"\n        >\n          <div v-if=\"filteredRecommendations.length === 0\" class=\"col-span-full py-16 text-center\">\n            <div class=\"inline-block p-6 rounded-full bg-gray-800 mb-6\">\n              <i class=\"fas fa-search text-4xl text-gray-500\"></i>\n            </div>\n            <p class=\"text-xl text-gray-400 mb-4\">No recommendations found with the selected filters.</p>\n            <button \n              @click=\"clearGenreFilters\" \n              class=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-full text-white transition-colors\"\n            >\n              Clear filters\n            </button>\n          </div>\n          \n          <recommendation-card \n            v-for=\"(recommendation, index) in filteredRecommendations\" \n            :key=\"recommendation.id || recommendation.title\" \n            :recommendation=\"recommendation\"\n            :view-mode=\"viewMode\"\n            :animation-delay=\"index * 100\"\n            @click=\"showDetails(recommendation)\"\n            class=\"cursor-pointer\"\n          />\n        </div>\n      </div>\n    </div>\n    \n    <!-- Modal for Recommendation Details -->\n    <div v-if=\"selectedRecommendation\" class=\"fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-fade-in\">\n      <div class=\"bg-gray-900 rounded-xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden flex flex-col border border-gray-800\">\n        <div class=\"p-4 border-b border-gray-800 flex justify-between items-center\">\n          <h3 class=\"text-xl font-bold text-white\">Recommendation Details</h3>\n          <button @click=\"selectedRecommendation = null\" class=\"text-gray-400 hover:text-white transition-colors\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"flex-1 overflow-y-auto p-6\">\n          <div class=\"flex flex-col md:flex-row gap-8\">\n            <!-- Image -->\n            <div class=\"w-full md:w-1/3 flex-shrink-0\">\n              <div class=\"bg-gray-800 rounded-xl overflow-hidden aspect-[3/4]\">\n                <img \n                  v-if=\"selectedRecommendation.image\" \n                  :src=\"selectedRecommendation.image\" \n                  :alt=\"selectedRecommendation.title\"\n                  class=\"w-full h-full object-cover\"\n                />\n                <div v-else class=\"w-full h-full flex items-center justify-center\">\n                  <i class=\"fas fa-image text-gray-600 text-4xl\"></i>\n                </div>\n              </div>\n              \n              <div class=\"mt-6 space-y-3\">\n                <div v-if=\"selectedRecommendation.score\" class=\"flex items-center\">\n                  <span class=\"text-amber-400 font-bold text-2xl mr-2\">{{ formatNumber(selectedRecommendation.score) }}</span>\n                  <div class=\"flex\">\n                    <i class=\"fas fa-star text-amber-400\"></i>\n                  </div>\n                </div>\n                \n                <div v-if=\"selectedRecommendation.type\" class=\"text-gray-400\">\n                  <span class=\"font-medium text-gray-300\">Type:</span> {{ selectedRecommendation.type }}\n                </div>\n                \n                <div v-if=\"selectedRecommendation.episodes\" class=\"text-gray-400\">\n                  <span class=\"font-medium text-gray-300\">Episodes:</span> {{ selectedRecommendation.episodes }}\n                </div>\n                \n                <div v-if=\"selectedRecommendation.year\" class=\"text-gray-400\">\n                  <span class=\"font-medium text-gray-300\">Year:</span> {{ selectedRecommendation.year }}\n                </div>\n              </div>\n            </div>\n            \n            <!-- Details -->\n            <div class=\"flex-1\">\n              <h2 class=\"text-2xl font-bold text-white mb-6\">{{ selectedRecommendation.title }}</h2>\n              \n              <div v-if=\"selectedRecommendation.synopsis\" class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-200 mb-2\">Synopsis</h4>\n                <p class=\"text-gray-400 leading-relaxed\">{{ selectedRecommendation.synopsis }}</p>\n              </div>\n              \n              <div v-if=\"selectedRecommendation.genres && selectedRecommendation.genres.length\" class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-200 mb-2\">Genres</h4>\n                <div class=\"flex flex-wrap gap-2\">\n                  <span \n                    v-for=\"(genre, index) in selectedRecommendation.genres\" \n                    :key=\"index\"\n                    class=\"px-3 py-1 bg-gray-800 text-blue-400 rounded-full text-sm border border-gray-700\"\n                  >\n                    {{ genre }}\n                  </span>\n                </div>\n              </div>\n              \n              <div v-if=\"selectedRecommendation.reasons && selectedRecommendation.reasons.length\" class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-200 mb-2\">Why we recommend</h4>\n                <ul class=\"space-y-3\">\n                  <li v-for=\"(reason, index) in selectedRecommendation.reasons\" :key=\"index\" class=\"text-gray-400 flex\">\n                    <i class=\"fas fa-check-circle text-green-500 mr-3 mt-1 flex-shrink-0\"></i>\n                    <span>{{ reason }}</span>\n                  </li>\n                </ul>\n              </div>\n              \n              <div v-if=\"selectedRecommendation.recommendedBy && selectedRecommendation.recommendedBy.length\" class=\"mb-6\">\n                <h4 class=\"text-lg font-medium text-gray-200 mb-2\">Recommended by</h4>\n                <p class=\"text-gray-400\">\n                  This recommendation was mentioned by {{ selectedRecommendation.recommendedBy.length }} \n                  {{ selectedRecommendation.recommendedBy.length === 1 ? 'user' : 'users' }} on Reddit.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"p-4 border-t border-gray-800 flex justify-end\">\n          <button \n            @click=\"selectedRecommendation = null\" \n            class=\"px-5 py-2 bg-gray-800 hover:bg-gray-700 text-gray-300 rounded-full transition-colors\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Debug Section -->\n    <div v-if=\"showDebugMode\" class=\"fixed inset-0 bg-black/80 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-fade-in overflow-auto\">\n      <div class=\"bg-gray-900 rounded-xl shadow-2xl max-w-5xl w-full max-h-[90vh] overflow-hidden flex flex-col border border-gray-800\">\n        <div class=\"p-4 border-b border-gray-800 flex justify-between items-center\">\n          <h3 class=\"text-xl font-bold text-white\">Debug Mode - Technical Details</h3>\n          <button @click=\"toggleDebugMode\" class=\"text-gray-400 hover:text-white transition-colors\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"flex-1 overflow-y-auto p-6\">\n          <!-- Timeline of processing -->\n          <div class=\"mb-8\">\n            <h2 class=\"text-xl font-semibold mb-6 text-white\">Processing Timeline</h2>\n            \n            <div class=\"timeline space-y-6\">\n              <!-- Step 1: User Query -->\n              <div class=\"relative pb-8\">\n                <div class=\"absolute left-4 top-8 bottom-0 w-0.5 bg-gray-700\"></div>\n                <div class=\"relative flex items-start space-x-3\">\n                  <div class=\"relative\">\n                    <span class=\"flex items-center justify-center w-8 h-8 rounded-full text-white bg-blue-600\">\n                      <i class=\"fas fa-search\"></i>\n                    </span>\n                  </div>\n                  <div class=\"flex-1\">\n                    <div class=\"flex justify-between\">\n                      <h3 class=\"text-base font-medium text-white\">User Query</h3>\n                      <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-900 text-blue-200\">\n                        Completed\n                      </span>\n                    </div>\n                    <p class=\"mt-1 text-sm text-gray-400\">Topic: \"{{ topic }}\" in category {{ getCategoryDisplayName(category) }}</p>\n                    <div class=\"mt-2 bg-gray-800 rounded-lg p-4 text-gray-300\">\n                      <p><strong>Language:</strong> {{ languages[language]?.name || language }}</p>\n                      <p><strong>Timestamp:</strong> {{ new Date().toISOString() }}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Step 2: Search on Reddit -->\n              <div class=\"relative pb-8\">\n                <div class=\"absolute left-4 top-8 bottom-0 w-0.5 bg-gray-700\"></div>\n                <div class=\"relative flex items-start space-x-3\">\n                  <div class=\"relative\">\n                    <span \n                      class=\"flex items-center justify-center w-8 h-8 rounded-full text-white\"\n                      :class=\"{\n                        'bg-blue-600': debugStatus.reddit === 'active',\n                        'bg-green-600': debugStatus.reddit === 'completed',\n                        'bg-red-600': debugStatus.reddit === 'error',\n                        'bg-gray-600': debugStatus.reddit === 'waiting'\n                      }\"\n                    >\n                      <i class=\"fab fa-reddit-alien\"></i>\n                    </span>\n                  </div>\n                  <div class=\"flex-1\">\n                    <div class=\"flex justify-between\">\n                      <h3 class=\"text-base font-medium text-white\">Search on Reddit</h3>\n                      <span \n                        class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\"\n                        :class=\"{\n                          'bg-blue-900 text-blue-200': debugStatus.reddit === 'active',\n                          'bg-green-900 text-green-200': debugStatus.reddit === 'completed',\n                          'bg-red-900 text-red-200': debugStatus.reddit === 'error',\n                          'bg-gray-700 text-gray-300': debugStatus.reddit === 'waiting'\n                        }\"\n                      >\n                        {{ getStatusText(debugStatus.reddit) }}\n                      </span>\n                    </div>\n                    <p class=\"mt-1 text-sm text-gray-400\">{{ debugMessages.reddit }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Step 3: Comment Aggregation -->\n              <div class=\"relative pb-8\">\n                <div class=\"absolute left-4 top-8 bottom-0 w-0.5 bg-gray-700\"></div>\n                <div class=\"relative flex items-start space-x-3\">\n                  <div class=\"relative\">\n                    <span \n                      class=\"flex items-center justify-center w-8 h-8 rounded-full text-white\"\n                      :class=\"{\n                        'bg-blue-600': debugStatus.aggregate === 'active',\n                        'bg-green-600': debugStatus.aggregate === 'completed',\n                        'bg-red-600': debugStatus.aggregate === 'error',\n                        'bg-gray-600': debugStatus.aggregate === 'waiting'\n                      }\"\n                    >\n                      <i class=\"fas fa-align-left\"></i>\n                    </span>\n                  </div>\n                  <div class=\"flex-1\">\n                    <div class=\"flex justify-between\">\n                      <h3 class=\"text-base font-medium text-white\">Comment Aggregation</h3>\n                      <span \n                        class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\"\n                        :class=\"{\n                          'bg-blue-900 text-blue-200': debugStatus.aggregate === 'active',\n                          'bg-green-900 text-green-200': debugStatus.aggregate === 'completed',\n                          'bg-red-900 text-red-200': debugStatus.aggregate === 'error',\n                          'bg-gray-700 text-gray-300': debugStatus.aggregate === 'waiting'\n                        }\"\n                      >\n                        {{ getStatusText(debugStatus.aggregate) }}\n                      </span>\n                    </div>\n                    <p class=\"mt-1 text-sm text-gray-400\">{{ debugMessages.aggregate }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Step 4: AI Analysis -->\n              <div class=\"relative pb-8\">\n                <div class=\"absolute left-4 top-8 bottom-0 w-0.5 bg-gray-700\"></div>\n                <div class=\"relative flex items-start space-x-3\">\n                  <div class=\"relative\">\n                    <span \n                      class=\"flex items-center justify-center w-8 h-8 rounded-full text-white\"\n                      :class=\"{\n                        'bg-blue-600': debugStatus.ai === 'active',\n                        'bg-green-600': debugStatus.ai === 'completed',\n                        'bg-red-600': debugStatus.ai === 'error',\n                        'bg-gray-600': debugStatus.ai === 'waiting'\n                      }\"\n                    >\n                      <i class=\"fas fa-robot\"></i>\n                    </span>\n                  </div>\n                  <div class=\"flex-1\">\n                    <div class=\"flex justify-between\">\n                      <h3 class=\"text-base font-medium text-white\">AI Analysis</h3>\n                      <span \n                        class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\"\n                        :class=\"{\n                          'bg-blue-900 text-blue-200': debugStatus.ai === 'active',\n                          'bg-green-900 text-green-200': debugStatus.ai === 'completed',\n                          'bg-red-900 text-red-200': debugStatus.ai === 'error',\n                          'bg-gray-700 text-gray-300': debugStatus.ai === 'waiting'\n                        }\"\n                      >\n                        {{ getStatusText(debugStatus.ai) }}\n                      </span>\n                    </div>\n                    <p class=\"mt-1 text-sm text-gray-400\">{{ debugMessages.ai }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Step 5: External API Enrichment -->\n              <div class=\"relative\">\n                <div class=\"relative flex items-start space-x-3\">\n                  <div class=\"relative\">\n                    <span \n                      class=\"flex items-center justify-center w-8 h-8 rounded-full text-white\"\n                      :class=\"{\n                        'bg-blue-600': debugStatus.jikan === 'active',\n                        'bg-green-600': debugStatus.jikan === 'completed',\n                        'bg-red-600': debugStatus.jikan === 'error',\n                        'bg-gray-600': debugStatus.jikan === 'waiting'\n                      }\"\n                    >\n                      <i class=\"fas fa-database\"></i>\n                    </span>\n                  </div>\n                  <div class=\"flex-1\">\n                    <div class=\"flex justify-between\">\n                      <h3 class=\"text-base font-medium text-white\">External API Enrichment</h3>\n                      <span \n                        class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium\"\n                        :class=\"{\n                          'bg-blue-900 text-blue-200': debugStatus.jikan === 'active',\n                          'bg-green-900 text-green-200': debugStatus.jikan === 'completed',\n                          'bg-red-900 text-red-200': debugStatus.jikan === 'error',\n                          'bg-gray-700 text-gray-300': debugStatus.jikan === 'waiting'\n                        }\"\n                      >\n                        {{ getStatusText(debugStatus.jikan) }}\n                      </span>\n                    </div>\n                    <p class=\"mt-1 text-sm text-gray-400\">{{ debugMessages.jikan }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Summary of Recommendations -->\n          <div v-if=\"recommendations.length > 0\" class=\"mt-8\">\n            <h2 class=\"text-xl font-semibold mb-6 text-white\">Generated Recommendations</h2>\n            <div class=\"bg-gray-800 rounded-lg p-4\">\n              <p class=\"text-gray-300 mb-4\">Total: {{ recommendations.length }} recommendations</p>\n              <div class=\"space-y-4\">\n                <div v-for=\"(rec, index) in recommendations\" :key=\"index\" class=\"border border-gray-700 rounded-md overflow-hidden\">\n                  <div class=\"px-4 py-3 bg-gray-700 font-medium text-white\">\n                    {{ index + 1 }}. {{ rec.title }}\n                  </div>\n                  <div class=\"p-4 text-gray-300\">\n                    <h5 class=\"text-sm font-semibold mb-2\">Reasons for recommendation:</h5>\n                    <ul class=\"list-disc pl-5 space-y-1\">\n                      <li v-for=\"(reason, mIndex) in rec.reasons\" :key=\"mIndex\" class=\"text-sm\">\n                        {{ reason }}\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"p-4 border-t border-gray-800 flex justify-end\">\n          <button \n            @click=\"toggleDebugMode\" \n            class=\"px-5 py-2 bg-gray-800 hover:bg-gray-700 text-gray-300 rounded-full transition-colors\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Footer -->\n    <footer class=\"bg-gray-900 text-gray-400 py-6 border-t border-gray-800\">\n      <div class=\"container mx-auto px-4 text-center\">\n        <p class=\"text-sm\">© 2023 RecommendIt - All rights reserved</p>\n      </div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted, onClickOutside, onBeforeUnmount } from 'vue'\nimport { useRouter } from 'vue-router'\nimport RecommendationCard from '@/components/RecommendationCard.vue'\nimport axios from 'axios'\n\nexport default {\n  name: 'Home',\n  components: {\n    RecommendationCard\n  },\n  setup() {\n    const router = useRouter()\n    \n    // Form data\n    const topic = ref('')\n    const category = ref('anime')\n    const language = ref('pt')\n    const categories = ref(['anime', 'kdrama'])\n    \n    // Mapeamento de categorias para nomes de exibição\n    const categoryDisplayNames = {\n      'anime': 'Anime & Manga',\n      'kdrama': 'K-Drama'\n    }\n    \n    // Função para obter o nome de exibição da categoria\n    const getCategoryDisplayName = (cat) => {\n      return categoryDisplayNames[cat] || cat;\n    }\n    \n    // Languages with icons\n    const languages = reactive({\n      pt: { name: 'Português', icon: 'flag-icon flag-icon-br' },\n      en: { name: 'English', icon: 'flag-icon flag-icon-us' },\n      es: { name: 'Español', icon: 'flag-icon flag-icon-es' },\n      fr: { name: 'Français', icon: 'flag-icon flag-icon-fr' },\n      ja: { name: '日本語', icon: 'flag-icon flag-icon-jp' }\n    })\n    \n    // UI state\n    const isLoading = ref(false)\n    const showResults = ref(false)\n    const showGenreFilter = ref(false)\n    const showCategoryMenu = ref(false)\n    const showLanguageMenu = ref(false)\n    const selectedGenres = ref([])\n    const viewMode = ref('grid')\n    const selectedRecommendation = ref(null)\n    const statusMessage = ref('Analyzing Reddit discussions')\n    const statusProgress = ref(0)\n    const statusDetail = ref('This may take a few seconds')\n    const currentItem = ref(null)\n    \n    // Data\n    const recommendations = ref([])\n    const genres = computed(() => {\n      const allGenres = new Set()\n      recommendations.value.forEach(rec => {\n        if (rec.genres && Array.isArray(rec.genres)) {\n          rec.genres.forEach(genre => allGenres.add(genre))\n        }\n      })\n      return [...allGenres].sort()\n    })\n    \n    // Computed properties\n    const filteredRecommendations = computed(() => {\n      if (selectedGenres.value.length === 0) {\n        return recommendations.value\n      }\n      \n      return recommendations.value.filter(rec => {\n        if (!rec.genres || !Array.isArray(rec.genres)) return false\n        return selectedGenres.value.some(genre => rec.genres.includes(genre))\n      })\n    })\n    \n    const languageIcon = computed(() => {\n      return languages[language.value]?.icon || 'fas fa-globe'\n    })\n    \n    // Load categories on mount\n    onMounted(() => {\n      // Carregar categorias da API\n      axios.get('/api/categories')\n        .then(response => {\n          if (response.data && response.data.categories) {\n            categories.value = response.data.categories;\n          }\n        })\n        .catch(error => {\n          console.error('Erro ao carregar categorias:', error);\n        });\n        \n      // Close dropdowns when clicking outside\n      document.addEventListener('click', (e) => {\n        if (!e.target.closest('.dropdown-container')) {\n          showCategoryMenu.value = false;\n          showLanguageMenu.value = false;\n          showGenreFilter.value = false;\n        }\n      });\n      \n      // Conectar ao SSE para atualizações de status em tempo real\n      connectToSSE();\n    });\n    \n    // Limpar conexões ao desmontar o componente\n    onBeforeUnmount(() => {\n      disconnectSSE();\n    });\n    \n    // Variável para armazenar a conexão SSE\n    let eventSource = null;\n    \n    // Debug mode\n    const showDebugMode = ref(false)\n    const debugStatus = reactive({\n      reddit: 'waiting',\n      aggregate: 'waiting',\n      ai: 'waiting',\n      jikan: 'waiting'\n    })\n    const debugMessages = reactive({\n      reddit: 'Waiting for search to begin...',\n      aggregate: 'Waiting for comment aggregation...',\n      ai: 'Waiting for AI analysis...',\n      jikan: 'Waiting for data enrichment...'\n    })\n    \n    // Conectar ao SSE\n    const connectToSSE = () => {\n      // Fechar conexão existente se houver\n      disconnectSSE();\n      \n      // Criar nova conexão\n      eventSource = new EventSource('/api/status-updates');\n      \n      // Evento de conexão estabelecida\n      eventSource.onopen = () => {\n        console.log('Conexão SSE estabelecida');\n      };\n      \n      // Evento de mensagem recebida\n      eventSource.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          console.log('Atualização de status recebida:', data);\n          \n          // Processar atualizações de status\n          if (data.type === 'status') {\n            statusMessage.value = data.message || 'Processando...';\n            statusProgress.value = data.progress || 0;\n            \n            // Atualizar o item atual sendo processado\n            if (data.currentItem) {\n              currentItem.value = data.currentItem;\n            }\n            \n            // Atualizar status de debug com base no status recebido\n            updateDebugStatus(data);\n            \n            // Definir detalhes com base no status\n            switch (data.status) {\n              case 'iniciando':\n                statusDetail.value = 'Preparando para buscar dados...';\n                break;\n              case 'otimizando':\n                statusDetail.value = 'Otimizando sua busca para melhores resultados...';\n                debugStatus.reddit = 'active';\n                debugMessages.reddit = data.message;\n                break;\n              case 'buscando':\n              case 'buscando_posts':\n                statusDetail.value = 'Buscando discussões relevantes no Reddit...';\n                debugStatus.reddit = 'active';\n                debugMessages.reddit = data.message;\n                break;\n              case 'sem_posts':\n                statusDetail.value = 'Nenhum post encontrado para esta busca.';\n                debugStatus.reddit = 'completed';\n                debugMessages.reddit = data.message;\n                break;\n              case 'coletando_comentarios':\n                statusDetail.value = 'Coletando comentários dos usuários...';\n                debugStatus.reddit = 'active';\n                debugMessages.reddit = data.message;\n                break;\n              case 'comentarios_coletados':\n                statusDetail.value = 'Comentários coletados com sucesso.';\n                debugStatus.reddit = 'completed';\n                debugMessages.reddit = data.message;\n                debugStatus.aggregate = 'active';\n                debugMessages.aggregate = 'Iniciando agregação de comentários...';\n                break;\n              case 'agregando':\n              case 'agregando_comentarios':\n                statusDetail.value = 'Organizando os comentários para análise...';\n                debugStatus.aggregate = 'active';\n                debugMessages.aggregate = data.message;\n                break;\n              case 'analisando':\n              case 'analisando_ia':\n                statusDetail.value = 'A IA está analisando os comentários para encontrar recomendações...';\n                debugStatus.aggregate = 'completed';\n                debugMessages.aggregate = 'Agregação de comentários concluída.';\n                debugStatus.ai = 'active';\n                debugMessages.ai = data.message;\n                break;\n              case 'recomendacoes_identificadas':\n                statusDetail.value = 'Recomendações identificadas com sucesso.';\n                debugStatus.ai = 'completed';\n                debugMessages.ai = data.message;\n                break;\n              case 'enriquecendo':\n              case 'enriquecendo_dados':\n                statusDetail.value = 'Buscando informações adicionais sobre as recomendações...';\n                debugStatus.jikan = 'active';\n                debugMessages.jikan = data.message;\n                break;\n              case 'concluido':\n                statusDetail.value = 'Processamento finalizado com sucesso!';\n                debugStatus.jikan = 'completed';\n                debugMessages.jikan = 'Enriquecimento de dados concluído.';\n                break;\n              case 'erro':\n                statusDetail.value = 'Ocorreu um erro durante o processamento.';\n                // Marcar a etapa atual como erro\n                if (debugStatus.jikan === 'active') {\n                  debugStatus.jikan = 'error';\n                  debugMessages.jikan = data.message;\n                } else if (debugStatus.ai === 'active') {\n                  debugStatus.ai = 'error';\n                  debugMessages.ai = data.message;\n                } else if (debugStatus.aggregate === 'active') {\n                  debugStatus.aggregate = 'error';\n                  debugMessages.aggregate = data.message;\n                } else if (debugStatus.reddit === 'active') {\n                  debugStatus.reddit = 'error';\n                  debugMessages.reddit = data.message;\n                }\n                break;\n              default:\n                statusDetail.value = 'Processando sua solicitação...';\n            }\n          }\n        } catch (error) {\n          console.error('Erro ao processar atualização de status:', error);\n        }\n      };\n      \n      // Evento de erro\n      eventSource.onerror = (error) => {\n        console.error('Erro na conexão SSE:', error);\n        disconnectSSE();\n      };\n    };\n    \n    // Atualizar status de debug com base no status recebido\n    const updateDebugStatus = (data) => {\n      // Atualizar mensagens de debug com base no progresso\n      if (data.progress <= 30) {\n        // Fase de busca no Reddit\n        debugStatus.reddit = 'active';\n        debugMessages.reddit = data.message;\n      } else if (data.progress <= 50) {\n        // Fase de agregação\n        debugStatus.reddit = 'completed';\n        debugStatus.aggregate = 'active';\n        debugMessages.aggregate = data.message;\n      } else if (data.progress <= 85) {\n        // Fase de análise com IA\n        debugStatus.aggregate = 'completed';\n        debugStatus.ai = 'active';\n        debugMessages.ai = data.message;\n      } else if (data.progress < 100) {\n        // Fase de enriquecimento\n        debugStatus.ai = 'completed';\n        debugStatus.jikan = 'active';\n        debugMessages.jikan = data.message;\n      } else if (data.progress === 100) {\n        // Processo concluído\n        if (data.status === 'erro') {\n          // Marcar a etapa atual como erro\n          if (debugStatus.jikan === 'active') {\n            debugStatus.jikan = 'error';\n          } else if (debugStatus.ai === 'active') {\n            debugStatus.ai = 'error';\n          } else if (debugStatus.aggregate === 'active') {\n            debugStatus.aggregate = 'error';\n          } else if (debugStatus.reddit === 'active') {\n            debugStatus.reddit = 'error';\n          }\n        } else {\n          // Marcar todas as etapas como concluídas\n          debugStatus.reddit = 'completed';\n          debugStatus.aggregate = 'completed';\n          debugStatus.ai = 'completed';\n          debugStatus.jikan = 'completed';\n        }\n      }\n    };\n    \n    // Desconectar do SSE\n    const disconnectSSE = () => {\n      if (eventSource) {\n        eventSource.close();\n        eventSource = null;\n        console.log('Conexão SSE fechada');\n      }\n    };\n    \n    // Obter texto do status\n    const getStatusText = (status) => {\n      switch (status) {\n        case 'active': return 'In progress';\n        case 'completed': return 'Completed';\n        case 'error': return 'Error';\n        default: return 'Waiting';\n      }\n    };\n    \n    // Toggle debug mode\n    const toggleDebugMode = () => {\n      showDebugMode.value = !showDebugMode.value;\n    };\n    \n    // Go to debug page (agora apenas chama toggleDebugMode)\n    const goToDebug = () => {\n      toggleDebugMode();\n    };\n    \n    // Search Reddit\n    const searchReddit = async () => {\n      if (!topic.value || !category.value) return\n\n      statusMessage.value = ''\n      statusProgress.value = 0\n      statusDetail.value = ''\n      currentItem.value = null\n      \n      isLoading.value = true\n      showResults.value = false\n      \n      // Resetar status\n      statusMessage.value = 'Starting search...';\n      statusProgress.value = 5;\n      statusDetail.value = 'Preparing to find recommendations...';\n      \n      try {\n        // Fazer chamada para a API\n        const response = await axios.post(`/api/search-and-summarize`, {\n          topic: topic.value,\n          category: category.value,\n          language: language.value\n        });\n        \n        if (response.data && response.data.summary && response.data.summary.recommendations) {\n          recommendations.value = response.data.summary.recommendations.sort((a, b) => b.score - a.score);\n          showResults.value = true;\n          \n          // Scroll to results after a short delay to allow for animation\n          setTimeout(() => {\n            window.scrollTo({\n              top: document.querySelector('.min-h-screen').offsetHeight,\n              behavior: 'smooth'\n            });\n          }, 300);\n        } else if (response.status === 404 || (response.data && response.data.error)) {\n          alert(`No recommendations found for \"${topic.value}\" in the ${getCategoryDisplayName(category.value)} category. Please try another topic or category.`);\n          recommendations.value = [];\n          showResults.value = false;\n        } else {\n          alert('No recommendations found for this search. Try another topic or category.');\n          recommendations.value = [];\n          showResults.value = false;\n        }\n      } catch (error) {\n        console.error('Error searching Reddit:', error)\n        if (error.response && error.response.status === 404) {\n          alert(`No recommendations found for \"${topic.value}\" in the ${getCategoryDisplayName(category.value)} category. Please try another topic or category.`);\n        } else {\n          alert('An error occurred while searching for recommendations. Please try again.')\n        }\n        recommendations.value = [];\n        showResults.value = false;\n      } finally {\n        isLoading.value = false\n      }\n    }\n    \n    // Toggle dropdowns\n    const toggleGenreFilter = (e) => {\n      e.stopPropagation();\n      showGenreFilter.value = !showGenreFilter.value;\n      showCategoryMenu.value = false;\n      showLanguageMenu.value = false;\n    }\n    \n    const toggleCategoryMenu = (e) => {\n      e.stopPropagation();\n      showCategoryMenu.value = !showCategoryMenu.value;\n      showGenreFilter.value = false;\n      showLanguageMenu.value = false;\n    }\n    \n    const toggleLanguageMenu = (e) => {\n      e.stopPropagation();\n      showLanguageMenu.value = !showLanguageMenu.value;\n      showGenreFilter.value = false;\n      showCategoryMenu.value = false;\n    }\n    \n    // Select options\n    const selectCategory = (cat) => {\n      category.value = cat;\n      showCategoryMenu.value = false;\n    }\n    \n    const selectLanguage = (code) => {\n      language.value = code;\n      showLanguageMenu.value = false;\n    }\n    \n    // Toggle genre selection\n    const toggleGenre = (genre) => {\n      const index = selectedGenres.value.indexOf(genre)\n      if (index === -1) {\n        selectedGenres.value.push(genre)\n      } else {\n        selectedGenres.value.splice(index, 1)\n      }\n    }\n    \n    // Clear genre filters\n    const clearGenreFilters = () => {\n      selectedGenres.value = []\n      showGenreFilter.value = false\n    }\n    \n    // Apply filters\n    const applyFilters = () => {\n      showGenreFilter.value = false\n    }\n\n    // Set view mode\n    const setViewMode = (mode) => {\n      viewMode.value = mode\n    }\n    \n    // Show recommendation details\n    const showDetails = (recommendation) => {\n      selectedRecommendation.value = recommendation\n    }\n    \n    // Format number\n    const formatNumber = (num) => {\n      if (typeof num !== 'number') return num\n      return num.toFixed(1)\n    }\n    \n    return {\n      // Form data\n      topic,\n      category,\n      language,\n      categories,\n      languages,\n      \n      // UI state\n      isLoading,\n      showResults,\n      showGenreFilter,\n      showCategoryMenu,\n      showLanguageMenu,\n      selectedGenres,\n      viewMode,\n      selectedRecommendation,\n      statusMessage,\n      statusProgress,\n      statusDetail,\n      currentItem,\n      \n      // Data\n      recommendations,\n      genres,\n      filteredRecommendations,\n      languageIcon,\n      \n      // Methods\n      searchReddit,\n      toggleGenreFilter,\n      toggleCategoryMenu,\n      toggleLanguageMenu,\n      selectCategory,\n      selectLanguage,\n      toggleGenre,\n      clearGenreFilters,\n      applyFilters,\n      setViewMode,\n      goToDebug,\n      showDetails,\n      formatNumber,\n      getCategoryDisplayName,\n      \n      // Debug mode\n      showDebugMode,\n      debugStatus,\n      debugMessages,\n      toggleDebugMode,\n      getStatusText\n    }\n  }\n}\n</script>\n\n<style>\n/* Animações */\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes fadeInDown {\n  from { \n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to { \n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-fade-in {\n  animation: fadeIn 0.5s ease-out forwards;\n}\n\n.animate-fade-in-down {\n  animation: fadeInDown 0.3s ease-out forwards;\n}\n\n.animation-delay-200 {\n  animation-delay: 200ms;\n}\n\n.animation-delay-400 {\n  animation-delay: 400ms;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}